{"version":3,"file":"js/775.js","mappings":"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","sources":["webpack://myzola-admin/./src/views/investment_hub/listings/active/Edit.vue","webpack://myzola-admin/./src/views/investment_hub/listings/active/Edit.vue?ece9"],"sourcesContent":["<script setup>\n\nimport CloseButton from \"@/components/CloseButton.vue\";\nimport {computed, onMounted, ref} from \"vue\";\nimport {useStore} from \"vuex\";\nimport {\n    checkHasPermission,\n    fetchInvestmentHubCompanies,\n    fetchInvestmentHubListingCategories,\n    isSmallScreen,\n    moneyFormatter\n} from \"@/services/Helpers\";\nimport InputLabel from \"@/components/InputLabel.vue\";\nimport {startCase} from \"lodash-es\";\nimport {Plus} from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport {ElMessage} from \"element-plus\";\nimport api from \"@/services/api\";\nimport {apiRoutes} from \"@/services/apiRoutes\";\nimport {useRouter} from \"vue-router\";\n\n/* -----------------------------\n * Properties & Variables\n * -----------------------------\n * */\nconst store = useStore();\nconst router = useRouter();\n\nconst isLoading = ref(false);\nconst listing = ref({});\n\nconst placements = ref(['top_picks', 'popular']);\nlet descriptionQuillEditor = ref(null);\n\nconst listingMedia = ref([]);\nconst currentPrimaryMedia = ref(null);\nconst primaryMedia = ref(null);\nconst primaryMediaFile = ref(null);\nconst media = ref([]);\nconst mediaFiles = ref([]);\n\nconst listingPayments = ref([]);\nconst editedPayments = ref([]);\nconst editPayment = ref(null);\nconst isAddingPayments = ref(false);\nconst isEditingPayment = ref(false);\nconst paymentModes = ref([]);\nconst newPayment = ref({\n    mode:null,\n    amount:null,\n    reference:null\n});\nconst newPayments = ref([]);\n\n\n/* -----------------------------\n * Computed Properties\n * -----------------------------\n * */\nlet companies = computed(()=> store.state.investmentHub.companies);\nlet categories = computed(()=> store.state.investmentHub.listingCategories);\nconst savedPayments = computed(()=> listingPayments.value.filter(entry => !entry.deleted && !entry.edited))\nconst deletedPayments = computed(()=> listingPayments.value.filter(entry => entry.deleted));\nconst paymentBeingEdited = computed(()=> {\n    if(!editPayment.value) return null;\n    return listingPayments.value\n            .find(entry => entry.id == editPayment.value.id);\n});\nconst hasEditedPayment = computed(() => {\n    if(!paymentBeingEdited.value) return false;\n    return Object.keys(paymentBeingEdited.value)\n            .some(key => editPayment.value[key] !== paymentBeingEdited.value[key]);\n});\n\nconst savedMedia = computed(()=> listingMedia.value.filter(entry => !entry.deleted));\nconst deletedMedia = computed(()=> listingMedia.value.filter(entry => entry.deleted));\n\n/* -----------------------------\n * Hooks\n * -----------------------------\n * */\nonMounted(()=> {\n    if(store.state.investmentHub.editListing == null) {\n        return router.push({name: 'investment_hub.listings.active'});\n    }\n\n    //copy details of listing being edited\n    listing.value = JSON.parse(JSON.stringify(store.state.investmentHub.editListing));\n    listing.value.company_id = listing.value.company.id;\n\n\n    //copy listing payments to manage them\n    listingPayments.value = JSON.parse(JSON.stringify(store.state.investmentHub.editListing.payments));\n    listingPayments.value = listingPayments.value\n            .map(entry => {\n                entry.deleted = false;\n                entry.edited = false;\n                return entry;\n            });\n\n    //copy listing media\n    listingMedia.value = JSON.parse(JSON.stringify(store.state.investmentHub.editListing.media));\n    listingMedia.value = listingMedia.value\n            .filter(entry => !entry.is_primary)\n            .map(entry => {\n                entry.deleted = false;\n                return entry;\n            });\n    let currentPrimaryMediaEntry = JSON.parse(JSON.stringify(store.state.investmentHub.editListing.media))\n            .find(entry => entry.is_primary);\n    if(currentPrimaryMediaEntry) currentPrimaryMedia.value = currentPrimaryMediaEntry.path;\n\n    //fetch required resource which aren't loaded yet\n    if(!companies.value.length) fetchInvestmentHubCompanies();\n    if(!categories.value.length) fetchInvestmentHubListingCategories();\n    fetchPaymentModes();\n\n    //set the default content for the company's about\n    $(\"#descriptionEditor\").html(listing.value.description);\n    descriptionQuillEditor = new Quill('#descriptionEditor', {\n        theme: 'snow',\n        placeholder: 'Enter listing body here'\n    });\n});\n\n\n/* -----------------------------\n * Methods & Functions\n * -----------------------------\n * */\nfunction fetchPaymentModes(){\n    axios.get('/assets/PaymentModes.json')\n            .then(response =>\n                    paymentModes.value = response.data\n                            .map(entry => {\n                                entry.image = require(`@/assets/images/payments/${entry.image}`);\n                                return entry;\n                            }));\n}\n\nfunction processPrimaryMediaUpload(event){\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n        primaryMedia.value = e.target.result;\n        primaryMediaFile.value = file;\n    };\n    reader.readAsDataURL(file);\n\n\n    //reset selection\n    $(\"#primaryListingMedia\").val(\"\");\n}\nfunction processUpload(event){\n    const files = event.target.files;\n    for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const reader = new FileReader();\n\n        reader.onload = (e) => {\n            media.value.push({\n                name: file.name,\n                url: e.target.result,\n            });\n            mediaFiles.value.push(file);\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n\n    //reset selection\n    $(\"#listingMedia\").val(\"\");\n}\nfunction removePrimaryUpload(){\n    primaryMedia.value = null;\n    primaryMediaFile.value = null;\n}\nfunction removeUpload(index){\n    media.value.splice(index, 1);\n    mediaFiles.value.splice(index, 1);\n}\n\nfunction acceptNewPayment(){\n    //validate that all required fields have been entered: mode & amount\n    if(!newPayment.value.mode || !newPayment.value.mode.length)\n        return ElMessage.warning(\"Please select a payment mode\");\n    if(!newPayment.value.amount || !newPayment.value.amount.toString().length)\n        return ElMessage.warning(\"Please enter the payment amount\");\n    if(!newPayment.value.reference || !newPayment.value.reference.length)\n        return ElMessage.warning(\"Please enter the payment reference\");\n    //validate that a valid payment amount has been entered\n    if(isNaN(newPayment.value.amount))\n        return ElMessage.warning(\"Please enter a valid amount\");\n    //check that reference code is not repeated\n    if(newPayment.value.reference != null && newPayment.value.reference.length){\n        if(newPayments.value.find(entry =>\n                entry.reference.toString().toLowerCase()\n                == newPayment.value.reference.toString().toLowerCase()))\n            return ElMessage.warning(\"Reference code has already been used\");\n        if(savedPayments.value.find(entry =>\n                entry.reference.toString().toLowerCase()\n                == newPayment.value.reference.toString().toLowerCase()))\n            return ElMessage.warning(\"Reference code has already been used\");\n    }\n\n    //everything's ok, add the new payment to list of payments\n    newPayments.value.push(JSON.parse(JSON.stringify(newPayment.value)));\n\n    //clear the fields\n    newPayment.value = {mode:null,amount:null,reference:null};\n\n    //dismiss the add payment dialog\n    isAddingPayments.value = false;\n}\nfunction goEditPayment(payment){\n    editPayment.value = JSON.parse(JSON.stringify(payment));\n    isEditingPayment.value = true;\n}\nfunction acceptPaymentEdits(){\n    //validate that all required fields have been entered: mode & amount\n    if(!editPayment.value.mode || !editPayment.value.mode.length)\n        return ElMessage.warning(\"Please select a payment mode\");\n    if(!editPayment.value.amount || !editPayment.value.amount.toString().length)\n        return ElMessage.warning(\"Please enter the payment amount\");\n    if(!editPayment.value.reference || !editPayment.value.reference.length)\n        return ElMessage.warning(\"Please enter the payment reference\");\n    //validate that a valid payment amount has been entered\n    if(isNaN(editPayment.value.amount))\n        return ElMessage.warning(\"Please enter a valid amount\");\n    //check that reference code is not repeated\n    if(editPayment.value.reference != null && editPayment.value.reference.length){\n        if(newPayments.value.find(entry =>\n                entry.reference.toString().toLowerCase()\n                == editPayment.value.reference.toString().toLowerCase()))\n            return ElMessage.warning(\"Reference code has already been used\");\n        if(editedPayments.value.find(entry =>\n                entry.reference.toString().toLowerCase()\n                == editPayment.value.reference.toString().toLowerCase()))\n            return ElMessage.warning(\"Reference code has already been used\");\n    }\n\n    //add payment being edited to edited payments\n    editedPayments.value.push(JSON.parse(JSON.stringify(editPayment.value)));\n    //unmark payment as edited in the original list\n    let payment = listingPayments.value.find(entry => entry.id == editPayment.value.id);\n    if(payment) payment.edited = true;\n    //dismiss modal\n    isEditingPayment.value = false;\n}\nfunction removeFromEdited(index, payment){\n    //remove payment from edited list\n    editedPayments.value.splice(index, 1);\n    //make payment not edited\n    let _payment = listingPayments.value.find(entry => entry.id == payment.id);\n    _payment.edited = false;\n}\n\nfunction handleSaveEdits(){\n    //validate title\n    if(!listing.value.title || !listing.value.title.length){\n        return ElMessage.warning(\"Please enter title\");\n    }\n    //validate placement\n    if(!listing.value.placement || !listing.value.placement.length){\n        return ElMessage.warning(\"Please select listing placement\");\n    }\n    //validate company selection\n    if(!listing.value.company_id || !listing.value.company_id.toString().length){\n        return ElMessage.warning(\"Please select the company\");\n    }\n    //validate category selection\n    if(!listing.value.category_id || !listing.value.category_id.toString().length){\n        return ElMessage.warning(\"Please select the category\");\n    }\n    //validate description\n    let description = descriptionQuillEditor.getSemanticHTML();\n    if(!description\n            || !description.toString().length\n            || description == \"<p></p>\") {\n        return ElMessage.warning(\"Please enter the listing description\")\n    }\n    //validate start date\n    if(!listing.value.start_at || !listing.value.start_at.length){\n        return ElMessage.warning(\"Please select start date\");\n    }\n    //validate end date\n    if(!listing.value.end_at || !listing.value.end_at.length){\n        return ElMessage.warning(\"Please select end date\");\n    }\n\n    //set description from rich text editor\n    listing.value.description = description;\n\n    //prepare request payload\n    let payload = new FormData();\n    //add select listing details to the form data\n    let properties = ['id', 'title', 'placement', 'company_id', 'category_id', 'description', 'start_at', 'end_at'];\n    properties.forEach(key => payload.append(key, listing.value[key]));\n\n    //append media to payload\n    //add primary media to payload\n    if(primaryMediaFile.value) payload.append(`primary_media`, primaryMediaFile.value);\n    if(mediaFiles.value.length) {\n        for (let count = 0; count < mediaFiles.value.length; count++) {\n            payload.append(`media[${count}]`, mediaFiles.value[count]);\n        }\n    }\n    //append new payments to payload\n    if(newPayments.value.length){\n        for (let count = 0; count < newPayments.value.length; count++) {\n            let _payment = newPayments.value[count];\n            payload.append(`payments[${count}][amount]`, _payment.amount);\n            payload.append(`payments[${count}][mode]`, _payment.mode);\n            payload.append(`payments[${count}][reference]`, _payment.reference || startCase(_payment.mode));\n        }\n    }\n    //append edited payments to payload\n    if(editedPayments.value.length){\n        for (let count = 0; count < editedPayments.value.length; count++) {\n            let _payment = editedPayments.value[count];\n            payload.append(`edited_payments[${count}][id]`, _payment.id);\n            payload.append(`edited_payments[${count}][amount]`, _payment.amount);\n            payload.append(`edited_payments[${count}][mode]`, _payment.mode);\n            payload.append(`edited_payments[${count}][reference]`, _payment.reference || startCase(_payment.mode));\n        }\n    }\n    //add any deleted payments\n    if(deletedPayments.value.length){\n        deletedPayments.value.forEach((social, index) => {\n            payload.append(`deleted_payments[${index}]`, social.id);\n        });\n    }\n    //add any deleted media\n    if(deletedMedia.value.length){\n        deletedMedia.value.forEach((file, index) => {\n            payload.append(`deleted_media[${index}]`, file.id);\n        });\n    }\n\n    //show loading\n    isLoading.value = true;\n\n    //make api call\n    api.post(apiRoutes.INVESTMENT_HUB_EDIT_LISTING, payload)\n            .then(response => {\n                //show success message\n                $.growl.notice({message: response.data.message});\n\n               //replace the entry for this listing in the listings list\n                let listingsCopy = JSON.parse(JSON.stringify(store.state.investmentHub.activeListings));\n                let index = listingsCopy.findIndex(entry => entry.id == listing.value.id);\n                if(index > -1){\n                    listingsCopy[index] = response.data.data;\n                    store.commit('investmentHub/STORE_ACTIVE_LISTINGS', listingsCopy);\n                }\n\n                //hide loading\n                isLoading.value = false;\n\n                //TODO NAVIGATE TO VIEW NEWLY ADDED LISTING\n                router.back();\n\n            })\n            .catch(error => isLoading.value = false)\n}\n</script>\n\n<template>\n\n    <div class=\"row\" v-loading=\"isLoading\">\n        <div class=\"col-sm-12 mb-3 d-inline-flex align-items-center justify-content-between\">\n            <h5 class=\"fw-bold mb-0\" style=\"margin-left: 20px;\">Edit Listing</h5>\n            <close-button></close-button>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <!-- Title -->\n                <div class=\"col-md-10 m-b-20\">\n                    <input-label>Title</input-label>\n                    <el-input placeholder=\"Enter listing title here\" size=\"large\" v-model=\"listing.title\"></el-input>\n                </div>\n\n                <!-- Description -->\n                <div class=\"col-md-10 m-b-20\">\n                    <input-label>Description</input-label>\n                    <div id=\"descriptionEditor\" class=\"quill-editor-default\">\n                    </div>\n                </div>\n\n                <!-- Placement -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Placement</input-label>\n                        <el-select\n                                placeholder=\"Select Placement\"\n                                size=\"large\"\n                                v-model=\"listing.placement\"\n                        >\n                            <el-option\n                                    v-for=\"placement in placements\"\n                                    :key=\"'create-listing-placement-'+placement\"\n                                    :label=\"startCase(placement)\"\n                                    :value=\"placement\"\n                            >\n                                <el-tag\n                                        v-if=\"placement == 'top_picks'\"\n                                        type=\"primary\"\n                                        effect=\"light\"\n                                        round\n                                        size=\"small\"\n                                >\n                                    {{ startCase(placement) }}\n                                </el-tag>\n                                <el-tag\n                                        v-if=\"placement == 'popular'\"\n                                        type=\"warning\"\n                                        effect=\"light\"\n                                        round\n                                        size=\"small\"\n                                >\n                                    {{ startCase(placement) }}\n                                </el-tag>\n                            </el-option>\n                        </el-select>\n                    </div>\n                </div>\n\n                <!-- Company -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Company</input-label>\n                        <el-select\n                                v-model=\"listing.company_id\"\n                                placeholder=\"Select Company\"\n                                size=\"large\"\n                                filterable>\n                            <el-option\n                                    v-for=\"company in companies\"\n                                    :key=\"'create-listing-company-'+company.id\"\n                                    :label=\"company.name\"\n                                    :value=\"company.id\">\n                                <img :src=\"company.logo\" style=\"max-width:30px;max-height: 20px;border-radius:10px;\">\n                                &nbsp;{{ company.name }}\n                            </el-option>\n                        </el-select>\n                    </div>\n                </div>\n\n                <!-- Category -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Category</input-label>\n                        <el-select\n                                v-model=\"listing.category_id\"\n                                placeholder=\"Select Category\"\n                                size=\"large\"\n                                filterable>\n                            <el-option\n                                    v-for=\"category in categories\"\n                                    :key=\"'create-listing-category-'+category.name\"\n                                    :label=\"category.name\"\n                                    :value=\"category.id\"\n                            >\n                                <div class=\"d-flex align-items-center\">\n                                    <span class=\"material-symbols-outlined\">{{ category.icon }}</span> &nbsp;\n                                    <span>{{ category.name }}</span>\n                                </div>\n                            </el-option>\n                        </el-select>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <!-- Start Date -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Runs from</input-label>\n                        <el-date-picker\n                                v-model=\"listing.start_at\"\n                                type=\"date\"\n                                value-format=\"YYYY-MM-DD\"\n                                format=\"MMM D, YYYY\"\n                                placeholder=\"Start Date\"\n                                size=\"large\"\n                        />\n                    </div>\n                </div>\n\n                <!-- End date -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>To</input-label>\n                        <el-date-picker\n                                v-model=\"listing.end_at\"\n                                type=\"date\"\n                                value-format=\"YYYY-MM-DD\"\n                                format=\"MMM D, YYYY\"\n                                placeholder=\"End Date\"\n                                size=\"large\"\n                        />\n                    </div>\n                </div>\n\n                <!-- Media -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Media</input-label>\n\n                        <small>Primary Media</small><br>\n                        <div class=\"col-md-12 p-l-10 m-b-10\" v-if=\"currentPrimaryMedia\">\n                            <h6><small>Saved</small></h6>\n                            <div class=\"d-flex flex-wrap\">\n                                <div class=\"p-1 uploaded-image\">\n                                    <img :src=\"currentPrimaryMedia\"  style=\"max-width:80px;max-height:60px;\">\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-10 m-t-10 p-l-10\">\n                                <h6><small>Upload new primary media (Max 2MB | png, jpg, jpeg, gif)</small></h6>\n                                <input type=\"file\" class=\"form-control\" id=\"primaryListingMedia\" @change=\"processPrimaryMediaUpload\" accept=\".png,.jpg,.jpeg,.gif\">\n                                <div class=\"d-flex flex-wrap m-t-10\" v-if=\"primaryMedia\">\n                                    <div class=\"p-1 uploaded-image\">\n                                        <img :src=\"primaryMedia\"  style=\"max-width:80px;max-height:60px;\">\n                                        <div class=\"remover\" @click=\"removePrimaryUpload\">\n                                            <i class=\"ri ri-close-line\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"m-t-20\">\n                            <small>Other Media</small>\n                        </div>\n                        <div class=\"col-md-12 p-l-10 m-t-10\" v-if=\"savedMedia.length\">\n                            <h6><small>Saved</small></h6>\n                            <div class=\"d-flex flex-wrap\">\n                                <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in savedMedia\" :key=\"'uploaded-media-'+index\">\n                                    <img :src=\"file.path\"  style=\"max-width:80px;max-height:60px;\">\n                                    <div v-if=\"checkHasPermission('investment_hub.listings.delete_media')\" class=\"remover\" @click=\"file.deleted = !file.deleted\">\n                                        <i class=\"ri ri-close-line\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-12 p-l-10 m-t-10\" v-if=\"deletedMedia.length\">\n                            <h6 class=\"text-danger\"><small>Deleted</small></h6>\n                            <div class=\"d-flex flex-wrap\">\n                                <div class=\"p-1 uploaded-image deleted\"\n                                     v-for=\"(file, index) in deletedMedia\" :key=\"'uploaded-media-'+index\">\n                                    <img :src=\"file.path\"  style=\"max-width:80px;max-height:60px;\">\n                                    <div class=\"remover\" @click=\"file.deleted = !file.deleted\">\n                                        <i class=\"ri ri-close-line\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-10 m-t-10 p-l-10\" v-if=\"checkHasPermission('investment_hub.listings.add_media')\">\n                            <h6><small>Upload new media (Max 2MB per file| png, jpg, jpeg, gif)</small></h6>\n                            <input type=\"file\" multiple class=\"form-control\" id=\"listingMedia\" @change=\"processUpload\" accept=\".png,.jpg,.jpeg,.gif\">\n                            <div class=\"d-flex flex-wrap m-t-10\">\n                                <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in media\" :key=\"'uploaded-media-'+index\">\n                                    <img :src=\"file.url\"  style=\"max-width:80px;max-height:60px;\">\n                                    <div class=\"remover\" @click=\"removeUpload(index)\">\n                                        <i class=\"ri ri-close-line\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Payments -->\n                <div class=\"col-md-12 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label v-if=\"listingPayments.length || checkHasPermission('investment_hub.listings.add_payment')\">Payments</input-label>\n\n                        <div v-if=\"savedPayments.length\" class=\"p-l-10 m-t-10\">\n                            <h6><small>Saved Payments</small></h6>\n                            <div class=\"d-flex flex-wrap align-items-center\">\n                                <div class=\"p-1 saved-payment\"\n                                     v-for=\"(payment, index) in savedPayments\" :key=\"'saved-payments-'+index\">\n                                    <small>\n                                        {{ startCase(payment.mode) }}\n                                         -\n                                        {{ moneyFormatter(payment.amount) }}\n                                    </small>\n                                    <br>\n                                    <el-tag v-if=\"checkHasPermission('investment_hub.listings.edit_payment')\" size=\"small\" style=\"cursor: pointer;\" @click=\"goEditPayment(payment)\" round>Edit</el-tag>\n                                    &nbsp;\n                                    <el-tag v-if=\"checkHasPermission('investment_hub.listings.delete_payment')\" size=\"small\" style=\"cursor:pointer;\" round type=\"danger\" @click=\"payment.deleted = !payment.deleted\">Delete</el-tag>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-l-10 m-t-10\" v-if=\"editedPayments.length\">\n                            <h6><small>Edited Payments</small></h6>\n                            <div class=\"d-inline-flex align-items-center flex-wrap\">\n                                <div v-for=\"(payment, index) in editedPayments\"\n                                     :key=\"'edited-payments-'+index\" class=\"m-r-5\">\n                                    <el-tag closable type=\"info\" @close=\"removeFromEdited(index, payment)\">\n                                        {{ startCase(payment.mode) }} - {{ moneyFormatter(payment.amount) }}\n                                    </el-tag>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-l-10 m-t-10\" v-if=\"deletedPayments.length\">\n                            <h6 class=\"text-danger\"><small>Marked for deletion</small></h6>\n                            <div class=\"d-inline-flex align-items-center flex-wrap\">\n                                <div v-for=\"(payment, index) in deletedPayments\"\n                                     :key=\"'to-delete-payments-'+index\" class=\"m-r-5\">\n                                    <el-tag closable type=\"danger\" @close=\"payment.deleted = !payment.deleted\">\n                                        {{ startCase(payment.mode) }} - {{ moneyFormatter(payment.amount) }}\n                                    </el-tag>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-l-10 m-t-10\">\n                            <h6 v-if=\"listingPayments.length\"><small>{{ newPayments.length ? \"New payments to save\" : \"Add payment\" }}</small></h6>\n                            <div class=\"col-sm-12 d-flex flex-wrap align-items-center p-l-15\">\n                                <div class=\"added-payment d-flex align-items-center\"\n                                     v-for=\"(payment, index) in newPayments\"\n                                     :key=\"'all-payment-modes-'+index\"\n                                     style=\"padding: 0 10px;\">\n                                    <div class=\"p-1\">\n                                        <small>\n                                            <strong>Amount</strong>: {{ moneyFormatter(payment.amount) }}\n                                            <br>\n                                            <strong>Mode</strong>: {{ startCase(payment.mode) }}\n                                            <template v-if=\"payment.reference\">\n                                                <br>\n                                                <strong>Reference</strong>: {{ payment.reference }}\n                                            </template>\n                                        </small>\n                                    </div>\n                                    <div class=\"remover\" @click=\"newPayments.splice(index, 1)\">\n                                        <i class=\"ri ri-close-line\"></i>\n                                    </div>\n                                </div>\n\n                                &nbsp;&nbsp;\n                                <el-button v-if=\"checkHasPermission('investment_hub.listings.add_payment')\" @click=\"isAddingPayments = !isAddingPayments\" :icon=\"Plus\" round>\n                                    Add payment\n                                </el-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"m-0\">\n        <div class=\"modal-footer m-t-10\">\n            <el-button size=\"large\" type=\"primary\" @click=\"handleSaveEdits\">Save Edits</el-button>\n            <el-button size=\"large\" type=\"info\" @click=\"router.back()\">Cancel</el-button>\n        </div>\n\n    </div>\n\n    <!-- Modal to add payments -->\n    <el-dialog\n            width=\"45%\"\n            :fullscreen=\"isSmallScreen\"\n            v-model=\"isAddingPayments\">\n\n        <div class=\"col-md-12 m-b-20\">\n            <input-label>Select Payment Mode</input-label>\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\n\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == newPayment.mode}\"\n                     v-for=\"mode in paymentModes\"\n                     :key=\"'all-payment-modes-'+mode.name\"\n                     @click=\"newPayment.mode = mode.name\">\n\n                    <div class=\"col-md-12 d-flex align-items-center\">\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\n                        &nbsp;&nbsp;\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\n                    </div>\n\n                    <div class=\"selected_indicator\" v-show=\"newPayment.mode == mode.name\">\n                        <i class=\"ri ri-check-line\"></i>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <input-label>Payment Amount</input-label>\n                <el-input placeholder=\"Enter payment amount\" v-model=\"newPayment.amount\"></el-input>\n\n            </div>\n            <div class=\"col-md-6\">\n                <input-label>Transaction Reference</input-label>\n                <el-input placeholder=\"Enter reference code\" v-model=\"newPayment.reference\"></el-input>\n            </div>\n        </div>\n        <br>\n        <div class=\"col-md-12\">\n            <el-button type=\"primary\" @click=\"acceptNewPayment\">Add Payment</el-button>\n        </div>\n\n    </el-dialog>\n\n    <!-- Modal to edit payment -->\n    <el-dialog\n            width=\"45%\"\n            :fullscreen=\"isSmallScreen\"\n            v-model=\"isEditingPayment\">\n\n        <div class=\"col-md-12 m-b-20\">\n            <input-label>Payment Mode</input-label>\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\n\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == editPayment.mode}\"\n                     v-for=\"mode in paymentModes\"\n                     :key=\"'edit-payment-modes-'+mode.name\"\n                     @click=\"editPayment.mode = mode.name\">\n\n                    <div class=\"col-md-12 d-flex align-items-center\">\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\n                        &nbsp;&nbsp;\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\n                    </div>\n\n                    <div class=\"selected_indicator\" v-show=\"editPayment.mode == mode.name\">\n                        <i class=\"ri ri-check-line\"></i>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <input-label>Payment Amount</input-label>\n                <el-input placeholder=\"Enter payment amount\" v-model=\"editPayment.amount\"></el-input>\n\n            </div>\n            <div class=\"col-md-6\">\n                <input-label>Transaction Reference</input-label>\n                <el-input placeholder=\"Enter reference code\" v-model=\"editPayment.reference\"></el-input>\n            </div>\n        </div>\n        <br>\n        <div class=\"col-md-12\">\n            <el-button type=\"primary\" :disabled=\"!hasEditedPayment\" plain @click=\"acceptPaymentEdits\">Done</el-button>\n        </div>\n\n    </el-dialog>\n\n</template>\n\n<style scoped>\n.saved-payment{\n    margin: 3px;\n    border: 1px solid #e5e4e4;\n    border-radius: 5px;\n}\n</style>","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Edit.vue?vue&type=style&index=0&id=2de106c3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2de106c3\"]])\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","isLoading","ref","listing","placements","descriptionQuillEditor","listingMedia","currentPrimaryMedia","primaryMedia","primaryMediaFile","media","mediaFiles","listingPayments","editedPayments","editPayment","isAddingPayments","isEditingPayment","paymentModes","newPayment","mode","amount","reference","newPayments","companies","computed","state","investmentHub","categories","listingCategories","savedPayments","value","filter","entry","deleted","edited","deletedPayments","paymentBeingEdited","find","id","hasEditedPayment","Object","keys","some","key","savedMedia","deletedMedia","fetchPaymentModes","axios","get","then","response","data","map","image","require","processPrimaryMediaUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","$","val","processUpload","i","length","push","name","url","removePrimaryUpload","removeUpload","index","splice","acceptNewPayment","ElMessage","warning","toString","isNaN","toLowerCase","JSON","parse","stringify","goEditPayment","payment","acceptPaymentEdits","removeFromEdited","_payment","handleSaveEdits","title","placement","company_id","category_id","description","getSemanticHTML","start_at","end_at","payload","FormData","properties","forEach","append","count","startCase","social","api","post","apiRoutes","INVESTMENT_HUB_EDIT_LISTING","growl","notice","message","listingsCopy","activeListings","findIndex","commit","back","catch","error","onMounted","editListing","company","payments","is_primary","currentPrimaryMediaEntry","path","fetchInvestmentHubCompanies","fetchInvestmentHubListingCategories","html","Quill","theme","placeholder","__exports__"],"sourceRoot":""}