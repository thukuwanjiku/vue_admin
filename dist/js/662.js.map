{"version":3,"file":"js/662.js","mappings":"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","sources":["webpack://myzola-admin/./src/views/investment_hub/listings/active/Add.vue","webpack://myzola-admin/./src/views/investment_hub/listings/active/Add.vue?f16d"],"sourcesContent":["<script setup>\n\nimport CloseButton from \"@/components/CloseButton.vue\";\nimport {computed, onMounted, ref} from \"vue\";\nimport {useStore} from \"vuex\";\nimport {\n    fetchInvestmentHubCompanies,\n    fetchInvestmentHubListingCategories,\n    isSmallScreen,\n    moneyFormatter\n} from \"@/services/Helpers\";\nimport InputLabel from \"@/components/InputLabel.vue\";\nimport {startCase} from \"lodash-es\";\nimport {Plus} from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport {ElMessage} from \"element-plus\";\nimport api from \"@/services/api\";\nimport {apiRoutes} from \"@/services/apiRoutes\";\nimport {useRouter} from \"vue-router\";\n\n/* -----------------------------\n * Properties & Variables\n * -----------------------------\n * */\nconst store = useStore();\nconst router = useRouter();\n\nconst isLoading = ref(false);\nconst listing = ref({\n    title: null,\n    placement: null,\n    category_id: null,\n    company_id: null,\n    start_at: null,\n    end_at: null,\n    description: null,\n});\n\nconst placements = ref(['top_picks', 'popular']);\nlet descriptionQuillEditor = ref(null);\nconst primaryMedia = ref(null);\nconst primaryMediaFile = ref(null);\nconst media = ref([]);\nconst mediaFiles = ref([]);\n\nconst isAddingPayments = ref(false);\nconst paymentModes = ref([]);\nconst newPayment = ref({\n    mode:null,\n    amount:null,\n    reference:null\n});\nconst payments = ref([]);\n\n\n\n/* -----------------------------\n * Computed Properties\n * -----------------------------\n * */\nlet companies = computed(()=> store.state.investmentHub.companies);\nlet categories = computed(()=> store.state.investmentHub.listingCategories);\n\n/* -----------------------------\n * Hooks\n * -----------------------------\n * */\nonMounted(()=> {\n    //fetch required resource which aren't loaded yet\n    if(!companies.value.length) fetchInvestmentHubCompanies();\n    if(!categories.value.length) fetchInvestmentHubListingCategories();\n    fetchPaymentModes();\n\n    descriptionQuillEditor = new Quill('#descriptionEditor', {\n        theme: 'snow',\n        placeholder: 'Enter listing body here'\n    });\n});\n\n\n/* -----------------------------\n * Methods & Functions\n * -----------------------------\n * */\nfunction fetchPaymentModes(){\n    axios.get('/assets/PaymentModes.json')\n            .then(response =>\n                    paymentModes.value = response.data\n                            .map(entry => {\n                                entry.image = require(`@/assets/images/payments/${entry.image}`);\n                                return entry;\n                            }));\n}\nfunction processPrimaryMediaUpload(event){\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n        primaryMedia.value = e.target.result;\n        primaryMediaFile.value = file;\n    };\n    reader.readAsDataURL(file);\n\n\n    //reset selection\n    $(\"#primaryListingMedia\").val(\"\");\n}\nfunction processUpload(event){\n    const files = event.target.files;\n    for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const reader = new FileReader();\n\n        reader.onload = (e) => {\n            media.value.push({\n                name: file.name,\n                url: e.target.result,\n            });\n            mediaFiles.value.push(file);\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n\n    //reset selection\n    $(\"#listingMedia\").val(\"\");\n}\nfunction removePrimaryUpload(){\n    primaryMedia.value = null;\n    primaryMediaFile.value = null;\n}\nfunction removeUpload(index){\n    media.value.splice(index, 1);\n    mediaFiles.value.splice(index, 1);\n}\nfunction acceptNewPayment(){\n    //validate that all required fields have been entered: mode & amount\n    if(!newPayment.value.mode || !newPayment.value.mode.length)\n        return ElMessage.warning(\"Please select a payment mode\");\n    if(!newPayment.value.amount || !newPayment.value.amount.toString().length)\n        return ElMessage.warning(\"Please enter the payment amount\");\n    if(!newPayment.value.reference || !newPayment.value.reference.toString().length)\n        return ElMessage.warning(\"Please enter the payment reference\");\n    //validate that a valid payment amount has been entered\n    if(isNaN(newPayment.value.amount))\n        return ElMessage.warning(\"Please enter a valid amount\");\n\n    //check that reference code is not repeated\n    if(newPayment.value.reference != null && newPayment.value.reference.length){\n        if(payments.value.find(entry =>\n                entry.reference != null\n                && entry.reference.toString().toLowerCase()\n                == newPayment.value.reference.toString().toLowerCase()))\n            return ElMessage.warning(\"Reference code has already been used\");\n    }\n\n    //everything's ok, add the new payment to list of payments\n    payments.value.push(JSON.parse(JSON.stringify(newPayment.value)));\n\n    //clear the fields\n    newPayment.value = {mode:null,amount:null,reference:null};\n\n    //dismiss the add payment dialog\n    isAddingPayments.value = false;\n}\n\nfunction handleCreateListing(){\n    //validate title\n    if(!listing.value.title || !listing.value.title.length){\n        return ElMessage.warning(\"Please enter title\");\n    }\n    //validate placement\n    if(!listing.value.placement || !listing.value.placement.length){\n        return ElMessage.warning(\"Please select listing placement\");\n    }\n    //validate company selection\n    if(!listing.value.company_id || !listing.value.company_id.toString().length){\n        return ElMessage.warning(\"Please select the company\");\n    }\n    //validate category selection\n    if(!listing.value.category_id || !listing.value.category_id.toString().length){\n        return ElMessage.warning(\"Please select the category\");\n    }\n    //validate media\n    if(!primaryMediaFile.value){\n        return ElMessage.warning(\"Please upload the primary media\");\n    }\n    if(!mediaFiles.value.length){\n        return ElMessage.warning(\"Please upload some images for this listing\");\n    }\n    //validate description\n    let description = descriptionQuillEditor.getSemanticHTML();\n    if(!description\n            || !description.toString().length\n            || description == \"<p></p>\") {\n        return ElMessage.warning(\"Please enter the listing description\")\n    }\n    //validate start date\n    if(!listing.value.start_at || !listing.value.start_at.length){\n        return ElMessage.warning(\"Please select start date\");\n    }\n    //validate end date\n    if(!listing.value.end_at || !listing.value.end_at.length){\n        return ElMessage.warning(\"Please select end date\");\n    }\n\n    //set description from rich text editor\n    listing.value.description = description;\n\n    //prepare request payload\n    let payload = new FormData();\n    //add all listing details to the form data\n    Object.keys(listing.value)\n            .forEach(key => {\n                let value = listing.value[key];\n                payload.append(key, value)\n            });\n    //append media to payload\n    for(let count=0; count < mediaFiles.value.length; count++){\n        payload.append(`media[${count}]`, mediaFiles.value[count]);\n    }\n    //add primary media to payload\n    payload.append(`primary_media`, primaryMediaFile.value);\n    //append payments to payload\n    if(payments.value.length){\n        for (let count = 0; count < payments.value.length; count++) {\n            payload.append(`payments[${count}][amount]`, payments.value[count].amount);\n            payload.append(`payments[${count}][mode]`, payments.value[count].mode);\n            payload.append(`payments[${count}][reference]`, payments.value[count].reference || startCase(payments.value[count].mode));\n        }\n    }\n\n    //show loading\n    isLoading.value = true;\n\n    //make api call\n    api.post(apiRoutes.INVESTMENT_HUB_ADD_LISTING, payload)\n            .then(response => {\n                //show success message\n                $.growl.notice({message: response.data.message});\n\n                //reset listings array & filters in vuex so that listings can be refreshed when we go back to list\n                store.commit('investmentHub/STORE_ACTIVE_LISTINGS', []);\n                store.commit('investmentHub/STORE_ACTIVE_LISTINGS_FILTERS', {});\n\n                //hide loading\n                isLoading.value = false;\n\n                //TODO NAVIGATE TO VIEW NEWLY ADDED LISTING\n                //navigate back\n                router.back();\n\n            })\n            .catch(error => isLoading.value = false)\n}\n</script>\n\n<template>\n\n    <div class=\"row\" v-loading=\"isLoading\">\n        <div class=\"col-sm-12 mb-3 d-inline-flex align-items-center justify-content-between\">\n            <h5 class=\"fw-bold mb-0\" style=\"margin-left: 20px;\">Create a new Listing</h5>\n            <close-button></close-button>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <!-- Title -->\n                <div class=\"col-md-10 m-b-20\">\n                    <input-label>Title</input-label>\n                    <el-input placeholder=\"Enter listing title here\" size=\"large\" v-model=\"listing.title\"></el-input>\n                </div>\n\n                <!-- Description -->\n                <div class=\"col-md-10 m-b-20\">\n                    <input-label>Description</input-label>\n                    <div id=\"descriptionEditor\" class=\"quill-editor-default\">\n                    </div>\n                </div>\n\n                <!-- Placement -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Placement</input-label>\n                        <el-select\n                                placeholder=\"Select Placement\"\n                                size=\"large\"\n                                v-model=\"listing.placement\"\n                        >\n                            <el-option\n                                    v-for=\"placement in placements\"\n                                    :key=\"'create-listing-placement-'+placement\"\n                                    :label=\"startCase(placement)\"\n                                    :value=\"placement\"\n                            >\n                                <el-tag\n                                        v-if=\"placement == 'top_picks'\"\n                                        type=\"primary\"\n                                        effect=\"light\"\n                                        round\n                                        size=\"small\"\n                                >\n                                    {{ startCase(placement) }}\n                                </el-tag>\n                                <el-tag\n                                        v-if=\"placement == 'popular'\"\n                                        type=\"warning\"\n                                        effect=\"light\"\n                                        round\n                                        size=\"small\"\n                                >\n                                    {{ startCase(placement) }}\n                                </el-tag>\n                            </el-option>\n                        </el-select>\n                    </div>\n                </div>\n\n                <!-- Company -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Company</input-label>\n                        <el-select\n                                v-model=\"listing.company_id\"\n                                placeholder=\"Select Company\"\n                                size=\"large\"\n                                filterable>\n                            <el-option\n                                    v-for=\"company in companies\"\n                                    :key=\"'create-listing-company-'+company.id\"\n                                    :label=\"company.name\"\n                                    :value=\"company.id\">\n                                <img :src=\"company.logo\" style=\"max-width:30px;max-height: 20px;border-radius:10px;\">\n                                &nbsp;{{ company.name }}\n                            </el-option>\n                        </el-select>\n                    </div>\n                </div>\n\n                <!-- Category -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Category</input-label>\n                        <el-select\n                                v-model=\"listing.category_id\"\n                                placeholder=\"Select Category\"\n                                size=\"large\"\n                                filterable>\n                            <el-option\n                                    v-for=\"category in categories\"\n                                    :key=\"'create-listing-category-'+category.name\"\n                                    :label=\"category.name\"\n                                    :value=\"category.id\"\n                            >\n                                <div class=\"d-flex align-items-center\">\n                                    <span class=\"material-symbols-outlined\">{{ category.icon }}</span> &nbsp;\n                                    <span>{{ category.name }}</span>\n                                </div>\n                            </el-option>\n                        </el-select>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-md-6\">\n                <!-- Start Date -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Runs from</input-label>\n                        <el-date-picker\n                                v-model=\"listing.start_at\"\n                                type=\"date\"\n                                value-format=\"YYYY-MM-DD\"\n                                format=\"MMM D, YYYY\"\n                                placeholder=\"Start Date\"\n                                size=\"large\"\n                        />\n                    </div>\n                </div>\n                <!-- End date -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>To</input-label>\n                        <el-date-picker\n                                v-model=\"listing.end_at\"\n                                type=\"date\"\n                                value-format=\"YYYY-MM-DD\"\n                                format=\"MMM D, YYYY\"\n                                placeholder=\"End Date\"\n                                size=\"large\"\n                        />\n                    </div>\n                </div>\n\n                <!-- Media -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Media</input-label>\n\n                        <div class=\"p-l-10\">\n                            <small>Primary Media</small><br>\n\n                            <input type=\"file\" class=\"form-control\" id=\"primaryListingMedia\" @change=\"processPrimaryMediaUpload\">\n                            <div class=\"d-flex flex-wrap m-t-5\" v-if=\"primaryMedia != null\">\n                                <div class=\"p-1 uploaded-image\">\n                                    <img :src=\"primaryMedia\"  style=\"max-width:80px;max-height:60px;\">\n                                    <div class=\"remover\" @click=\"removePrimaryUpload\">\n                                        <i class=\"ri ri-close-line\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"p-l-10 m-t-10\">\n                            <small>Other Media</small><br>\n\n                            <input type=\"file\" multiple class=\"form-control\" id=\"listingMedia\" @change=\"processUpload\">\n                            <div class=\"d-flex flex-wrap m-t-5\">\n                                <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in media\" :key=\"'uploaded-media-'+index\">\n                                    <img :src=\"file.url\"  style=\"max-width:80px;max-height:60px;\">\n                                    <div class=\"remover\" @click=\"removeUpload(index)\">\n                                        <i class=\"ri ri-close-line\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Payments -->\n                <div class=\"col-md-10 m-b-20\">\n                    <div class=\"form-floating\">\n                        <input-label>Payments</input-label>\n\n                        <div class=\"col-sm-12 d-flex flex-wrap align-items-center\">\n                            <div class=\"p-1 added-payment\"\n                                 v-for=\"(payment, index) in payments\" :key=\"'added-payment-'+index\">\n                                <div class=\"p-1\">\n                                    <small>\n                                        <strong>Amount</strong>: {{ moneyFormatter(payment.amount) }}\n                                        <br>\n                                        <strong>Mode</strong>: {{ startCase(payment.mode) }}\n                                        <template v-if=\"payment.reference\">\n                                            <br>\n                                            <strong>Reference</strong>: {{ payment.reference }}\n                                        </template>\n                                    </small>\n                                </div>\n                                <div class=\"remover\" @click=\"payments.splice(index, 1)\">\n                                    <i class=\"ri ri-close-line\"></i>\n                                </div>\n                            </div>\n\n                            &nbsp;&nbsp;\n                            <el-button @click=\"isAddingPayments = !isAddingPayments\" :icon=\"Plus\" round>\n                                Add payment\n                            </el-button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"m-0\">\n        <div class=\"modal-footer m-t-10\">\n            <el-button size=\"large\" type=\"primary\" @click=\"handleCreateListing\">Create Listing</el-button>\n            <el-button size=\"large\" type=\"info\" @click=\"router.back()\">Cancel</el-button>\n        </div>\n\n    </div>\n\n    <!-- Modal to add payments -->\n    <el-dialog\n            custom-class=\"el-dialog-width\"\n            width=\"45%\"\n            :fullscreen=\"isSmallScreen\"\n            v-model=\"isAddingPayments\">\n\n        <div class=\"col-md-12 m-b-20\">\n            <input-label>Select Payment Mode</input-label>\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\n\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == newPayment.mode}\"\n                     v-for=\"mode in paymentModes\"\n                     :key=\"'all-payment-modes-'+mode.name\"\n                     @click=\"newPayment.mode = mode.name\">\n\n                    <div class=\"col-md-12 d-flex align-items-center\">\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\n                        &nbsp;&nbsp;\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\n                    </div>\n\n                    <div class=\"selected_indicator\" v-show=\"newPayment.mode == mode.name\">\n                        <i class=\"ri ri-check-line\"></i>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <input-label>Payment Amount</input-label>\n                <el-input placeholder=\"Enter payment amount\" v-model=\"newPayment.amount\"></el-input>\n\n            </div>\n            <div class=\"col-md-6\">\n                <input-label>Transaction Reference</input-label>\n                <el-input placeholder=\"Enter reference code\" v-model=\"newPayment.reference\"></el-input>\n            </div>\n        </div>\n        <br>\n        <div class=\"col-md-12\">\n            <el-button type=\"primary\" @click=\"acceptNewPayment\">Add Payment</el-button>\n        </div>\n\n    </el-dialog>\n\n</template>\n\n<style scoped>\n\n</style>","import script from \"./Add.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Add.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","isLoading","ref","listing","title","placement","category_id","company_id","start_at","end_at","description","placements","descriptionQuillEditor","primaryMedia","primaryMediaFile","media","mediaFiles","isAddingPayments","paymentModes","newPayment","mode","amount","reference","payments","companies","computed","state","investmentHub","categories","listingCategories","fetchPaymentModes","axios","get","then","response","value","data","map","entry","image","require","processPrimaryMediaUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","$","val","processUpload","i","length","push","name","url","removePrimaryUpload","removeUpload","index","splice","acceptNewPayment","toString","isNaN","ElMessage","warning","find","toLowerCase","JSON","parse","stringify","handleCreateListing","getSemanticHTML","payload","FormData","Object","keys","forEach","key","append","count","startCase","api","post","apiRoutes","INVESTMENT_HUB_ADD_LISTING","growl","notice","message","commit","back","catch","error","onMounted","fetchInvestmentHubCompanies","fetchInvestmentHubListingCategories","Quill","theme","placeholder","__exports__"],"sourceRoot":""}