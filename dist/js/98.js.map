{"version":3,"file":"js/98.js","mappings":"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","sources":["webpack://myzola-admin/./src/views/explore_hub/listings/active/Add.vue","webpack://myzola-admin/./src/views/explore_hub/listings/active/Add.vue?b843"],"sourcesContent":["<script setup>\r\n\r\nimport CloseButton from \"@/components/CloseButton.vue\";\r\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n    fetchExploreHubCompanies,\r\n    fetchExploreHubListingCategories, isSmallScreen, moneyFormatter\r\n} from \"@/services/Helpers\";\r\nimport InputLabel from \"@/components/InputLabel.vue\";\r\nimport {startCase} from \"lodash-es\";\r\nimport {Plus} from \"@element-plus/icons-vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport api from \"@/services/api\";\r\nimport {apiRoutes} from \"@/services/apiRoutes\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n/* -----------------------------\r\n * Properties & Variables\r\n * -----------------------------\r\n * */\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst isLoading = ref(false);\r\nconst listing = ref({\r\n    title: null,\r\n    placement: null,\r\n    category_id: null,\r\n    company_id: null,\r\n    start_at: null,\r\n    end_at: null,\r\n    description: null,\r\n});\r\n\r\nconst placements = ref(['for_you', 'featured', 'exclusive']);\r\nlet descriptionQuillEditor = ref(null);\r\nconst primaryMedia = ref(null);\r\nconst primaryMediaFile = ref(null);\r\nconst media = ref([]);\r\nconst mediaFiles = ref([]);\r\n\r\nconst isAddingPayments = ref(false);\r\nconst paymentModes = ref([]);\r\nconst newPayment = ref({\r\n    mode:null,\r\n    amount:null,\r\n    reference:null\r\n});\r\nconst payments = ref([]);\r\n\r\n\r\n\r\n/* -----------------------------\r\n * Computed Properties\r\n * -----------------------------\r\n * */\r\nlet companies = computed(()=> store.state.exploreHub.companies);\r\nlet categories = computed(()=> store.state.exploreHub.listingCategories);\r\n\r\n/* -----------------------------\r\n * Hooks\r\n * -----------------------------\r\n * */\r\nonMounted(()=> {\r\n    //fetch required resource which aren't loaded yet\r\n    if(!companies.value.length) fetchExploreHubCompanies();\r\n    if(!categories.value.length) fetchExploreHubListingCategories();\r\n    fetchPaymentModes();\r\n\r\n    descriptionQuillEditor = new Quill('#descriptionEditor', {\r\n        theme: 'snow',\r\n        placeholder: 'Enter listing body here'\r\n    });\r\n});\r\n\r\n\r\n/* -----------------------------\r\n * Methods & Functions\r\n * -----------------------------\r\n * */\r\nfunction fetchPaymentModes(){\r\n    axios.get('/assets/PaymentModes.json')\r\n            .then(response =>\r\n                    paymentModes.value = response.data\r\n                            .map(entry => {\r\n                                entry.image = require(`@/assets/images/payments/${entry.image}`);\r\n                                return entry;\r\n                            }));\r\n}\r\nfunction processPrimaryMediaUpload(event){\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n        primaryMedia.value = e.target.result;\r\n        primaryMediaFile.value = file;\r\n    };\r\n    reader.readAsDataURL(file);\r\n\r\n\r\n    //reset selection\r\n    $(\"#primaryListingMedia\").val(\"\");\r\n}\r\nfunction processUpload(event){\r\n    const files = event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            media.value.push({\r\n                name: file.name,\r\n                url: e.target.result,\r\n            });\r\n            mediaFiles.value.push(file);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n    //reset selection\r\n    $(\"#listingMedia\").val(\"\");\r\n}\r\nfunction removePrimaryUpload(){\r\n    primaryMedia.value = null;\r\n    primaryMediaFile.value = null;\r\n}\r\nfunction removeUpload(index){\r\n    media.value.splice(index, 1);\r\n    mediaFiles.value.splice(index, 1);\r\n}\r\nfunction acceptNewPayment(){\r\n    //validate that all required fields have been entered: mode & amount\r\n    if(!newPayment.value.mode || !newPayment.value.mode.length)\r\n        return ElMessage.warning(\"Please select a payment mode\");\r\n    if(!newPayment.value.amount || !newPayment.value.amount.toString().length)\r\n        return ElMessage.warning(\"Please enter the payment amount\");\r\n    if(!newPayment.value.reference || !newPayment.value.reference.toString().length)\r\n        return ElMessage.warning(\"Please enter the payment reference\");\r\n    //validate that a valid payment amount has been entered\r\n    if(isNaN(newPayment.value.amount))\r\n        return ElMessage.warning(\"Please enter a valid amount\");\r\n\r\n    //check that reference code is not repeated\r\n    if(payments.value.find(entry =>\r\n            entry.reference != null\r\n            && entry.reference.toString().toLowerCase()\r\n            == newPayment.value.reference.toString().toLowerCase()))\r\n        return ElMessage.warning(\"Reference code has already been used\");\r\n\r\n    //everything's ok, add the new payment to list of payments\r\n    payments.value.push(JSON.parse(JSON.stringify(newPayment.value)));\r\n\r\n    //clear the fields\r\n    newPayment.value = {mode:null,amount:null,reference:null};\r\n\r\n    //dismiss the add payment dialog\r\n    isAddingPayments.value = false;\r\n}\r\n\r\nfunction handleCreateListing(){\r\n    //validate title\r\n    if(!listing.value.title || !listing.value.title.length){\r\n        return ElMessage.warning(\"Please enter title\");\r\n    }\r\n    //validate placement\r\n    if(!listing.value.placement || !listing.value.placement.length){\r\n        return ElMessage.warning(\"Please select listing placement\");\r\n    }\r\n    //validate company selection\r\n    if(!listing.value.company_id || !listing.value.company_id.toString().length){\r\n        return ElMessage.warning(\"Please select the company\");\r\n    }\r\n    //validate category selection\r\n    if(!listing.value.category_id || !listing.value.category_id.toString().length){\r\n        return ElMessage.warning(\"Please select the category\");\r\n    }\r\n    //validate media\r\n    if(!primaryMediaFile.value){\r\n        return ElMessage.warning(\"Please upload the primary media\");\r\n    }\r\n    if(!mediaFiles.value.length){\r\n        return ElMessage.warning(\"Please upload some images for this listing\");\r\n    }\r\n    //validate description\r\n    let description = descriptionQuillEditor.getSemanticHTML();\r\n    if(!description\r\n            || !description.toString().length\r\n            || description == \"<p></p>\") {\r\n        return ElMessage.warning(\"Please enter the listing description\")\r\n    }\r\n    //validate start date\r\n    if(!listing.value.start_at || !listing.value.start_at.length){\r\n        return ElMessage.warning(\"Please select start date\");\r\n    }\r\n    //validate end date\r\n    if(!listing.value.end_at || !listing.value.end_at.length){\r\n        return ElMessage.warning(\"Please select end date\");\r\n    }\r\n\r\n    //set description from rich text editor\r\n    listing.value.description = description;\r\n\r\n    //prepare request payload\r\n    let payload = new FormData();\r\n    //add all listing details to the form data\r\n    Object.keys(listing.value)\r\n            .forEach(key => {\r\n                let value = listing.value[key];\r\n                payload.append(key, value)\r\n            });\r\n    //append media to payload\r\n    for(let count=0; count < mediaFiles.value.length; count++){\r\n        payload.append(`media[${count}]`, mediaFiles.value[count]);\r\n    }\r\n    //add primary media to payload\r\n    payload.append(`primary_media`, primaryMediaFile.value);\r\n    //append payments to payload\r\n    if(payments.value.length){\r\n        for (let count = 0; count < payments.value.length; count++) {\r\n            payload.append(`payments[${count}][amount]`, payments.value[count].amount);\r\n            payload.append(`payments[${count}][mode]`, payments.value[count].mode);\r\n            payload.append(`payments[${count}][reference]`, payments.value[count].reference || startCase(payments.value[count].mode));\r\n        }\r\n    }\r\n\r\n    //show loading\r\n    isLoading.value = true;\r\n\r\n    //make api call\r\n    api.post(apiRoutes.EXPLORE_HUB_ADD_LISTING, payload)\r\n            .then(response => {\r\n                //show success message\r\n                $.growl.notice({message: response.data.message});\r\n\r\n                //reset listings array & filters in vuex so that listings can be refreshed when we go back to list\r\n                store.commit('exploreHub/STORE_ACTIVE_LISTINGS', []);\r\n                store.commit('exploreHub/STORE_ACTIVE_LISTINGS_FILTERS', {});\r\n\r\n                //hide loading\r\n                isLoading.value = false;\r\n\r\n                //TODO NAVIGATE TO VIEW NEWLY ADDED LISTING\r\n                //navigate back\r\n                router.back();\r\n\r\n            })\r\n            .catch(error => isLoading.value = false)\r\n}\r\n</script>\r\n\r\n<template>\r\n\r\n    <div class=\"row\" v-loading=\"isLoading\">\r\n        <div class=\"col-sm-12 mb-3 d-inline-flex align-items-center justify-content-between\">\r\n            <h5 class=\"fw-bold mb-0\" style=\"margin-left: 20px;\">Create a new Listing</h5>\r\n            <close-button></close-button>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Title -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <input-label>Title</input-label>\r\n                    <el-input placeholder=\"Enter listing title here\" size=\"large\" v-model=\"listing.title\"></el-input>\r\n                </div>\r\n\r\n                <!-- Description -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <input-label>Description</input-label>\r\n                    <div id=\"descriptionEditor\" class=\"quill-editor-default\">\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Placement -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Placement</input-label>\r\n                        <el-select\r\n                                placeholder=\"Select Placement\"\r\n                                size=\"large\"\r\n                                v-model=\"listing.placement\"\r\n                        >\r\n                            <el-option\r\n                                    v-for=\"placement in placements\"\r\n                                    :key=\"'create-listing-placement-'+placement\"\r\n                                    :label=\"startCase(placement)\"\r\n                                    :value=\"placement\"\r\n                            >\r\n                                <el-tag\r\n                                        v-if=\"placement == 'for_you'\"\r\n                                        type=\"success\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                                <el-tag\r\n                                        v-if=\"placement == 'featured'\"\r\n                                        type=\"primary\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                                <el-tag\r\n                                        v-if=\"placement == 'exclusive'\"\r\n                                        type=\"warning\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Company -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Company</input-label>\r\n                        <el-select\r\n                                v-model=\"listing.company_id\"\r\n                                placeholder=\"Select Company\"\r\n                                size=\"large\"\r\n                                filterable>\r\n                            <el-option\r\n                                    v-for=\"company in companies\"\r\n                                    :key=\"'create-listing-company-'+company.id\"\r\n                                    :label=\"company.name\"\r\n                                    :value=\"company.id\">\r\n                                <img :src=\"company.logo\" style=\"max-width:30px;max-height: 20px;border-radius:10px;\">\r\n                                &nbsp;{{ company.name }}\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Category -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Category</input-label>\r\n                        <el-select\r\n                                v-model=\"listing.category_id\"\r\n                                placeholder=\"Select Category\"\r\n                                size=\"large\"\r\n                                filterable>\r\n                            <el-option\r\n                                    v-for=\"category in categories\"\r\n                                    :key=\"'create-listing-category-'+category.name\"\r\n                                    :label=\"category.name\"\r\n                                    :value=\"category.id\"\r\n                            >\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <span class=\"material-symbols-outlined\">{{ category.icon }}</span> &nbsp;\r\n                                    <span>{{ category.name }}</span>\r\n                                </div>\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Start Date -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Runs from</input-label>\r\n                        <el-date-picker\r\n                                v-model=\"listing.start_at\"\r\n                                type=\"date\"\r\n                                value-format=\"YYYY-MM-DD\"\r\n                                format=\"MMM D, YYYY\"\r\n                                placeholder=\"Start Date\"\r\n                                size=\"large\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <!-- End date -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>To</input-label>\r\n                        <el-date-picker\r\n                                v-model=\"listing.end_at\"\r\n                                type=\"date\"\r\n                                value-format=\"YYYY-MM-DD\"\r\n                                format=\"MMM D, YYYY\"\r\n                                placeholder=\"End Date\"\r\n                                size=\"large\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Media -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Media</input-label>\r\n\r\n                        <div class=\"p-l-10\">\r\n                            <small>Primary Media</small><br>\r\n\r\n                            <input type=\"file\" class=\"form-control\" id=\"primaryListingMedia\" @change=\"processPrimaryMediaUpload\">\r\n                            <div class=\"d-flex flex-wrap m-t-5\" v-if=\"primaryMedia != null\">\r\n                                <div class=\"p-1 uploaded-image\">\r\n                                    <img :src=\"primaryMedia\"  style=\"max-width:80px;max-height:60px;\">\r\n                                    <div class=\"remover\" @click=\"removePrimaryUpload\">\r\n                                        <i class=\"ri ri-close-line\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-l-10 m-t-10\">\r\n                            <small>Other Media</small><br>\r\n\r\n                            <input type=\"file\" multiple class=\"form-control\" id=\"listingMedia\" @change=\"processUpload\">\r\n                            <div class=\"d-flex flex-wrap m-t-5\">\r\n                                <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in media\" :key=\"'uploaded-media-'+index\">\r\n                                    <img :src=\"file.url\"  style=\"max-width:80px;max-height:60px;\">\r\n                                    <div class=\"remover\" @click=\"removeUpload(index)\">\r\n                                        <i class=\"ri ri-close-line\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Payments -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Payments</input-label>\r\n\r\n                        <div class=\"col-sm-12 d-flex flex-wrap align-items-center\">\r\n                            <div class=\"p-1 added-payment\"\r\n                                 v-for=\"(payment, index) in payments\" :key=\"'added-payment-'+index\">\r\n                                <div class=\"p-1\">\r\n                                    <small>\r\n                                        <strong>Amount</strong>: {{ moneyFormatter(payment.amount) }}\r\n                                        <br>\r\n                                        <strong>Mode</strong>: {{ startCase(payment.mode) }}\r\n                                        <template v-if=\"payment.reference\">\r\n                                            <br>\r\n                                            <strong>Reference</strong>: {{ payment.reference }}\r\n                                        </template>\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"remover\" @click=\"payments.splice(index, 1)\">\r\n                                    <i class=\"ri ri-close-line\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                            &nbsp;&nbsp;\r\n                            <el-button @click=\"isAddingPayments = !isAddingPayments\" :icon=\"Plus\" round>\r\n                                Add payment\r\n                            </el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <hr class=\"m-0\">\r\n        <div class=\"modal-footer m-t-10\">\r\n            <el-button size=\"large\" type=\"primary\" @click=\"handleCreateListing\">Create Listing</el-button>\r\n            <el-button size=\"large\" type=\"info\" @click=\"router.back()\">Cancel</el-button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Modal to add payments -->\r\n    <el-dialog\r\n            custom-class=\"el-dialog-width\"\r\n            width=\"45%\"\r\n            :fullscreen=\"isSmallScreen\"\r\n            v-model=\"isAddingPayments\">\r\n\r\n        <div class=\"col-md-12 m-b-20\">\r\n            <input-label>Select Payment Mode</input-label>\r\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\r\n\r\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == newPayment.mode}\"\r\n                     v-for=\"mode in paymentModes\"\r\n                     :key=\"'all-payment-modes-'+mode.name\"\r\n                     @click=\"newPayment.mode = mode.name\">\r\n\r\n                    <div class=\"col-md-12 d-flex align-items-center\">\r\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\r\n                        &nbsp;&nbsp;\r\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\r\n                    </div>\r\n\r\n                    <div class=\"selected_indicator\" v-show=\"newPayment.mode == mode.name\">\r\n                        <i class=\"ri ri-check-line\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <input-label>Payment Amount</input-label>\r\n                <el-input placeholder=\"Enter payment amount\" v-model=\"newPayment.amount\"></el-input>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <input-label>Transaction Reference</input-label>\r\n                <el-input placeholder=\"Enter reference code\" v-model=\"newPayment.reference\"></el-input>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n            <el-button type=\"primary\" @click=\"acceptNewPayment\">Add Payment</el-button>\r\n        </div>\r\n\r\n    </el-dialog>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Add.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Add.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","isLoading","ref","listing","title","placement","category_id","company_id","start_at","end_at","description","placements","descriptionQuillEditor","primaryMedia","primaryMediaFile","media","mediaFiles","isAddingPayments","paymentModes","newPayment","mode","amount","reference","payments","companies","computed","state","exploreHub","categories","listingCategories","fetchPaymentModes","axios","get","then","response","value","data","map","entry","image","require","processPrimaryMediaUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","$","val","processUpload","i","length","push","name","url","removePrimaryUpload","removeUpload","index","splice","acceptNewPayment","toString","isNaN","ElMessage","warning","find","toLowerCase","JSON","parse","stringify","handleCreateListing","getSemanticHTML","payload","FormData","Object","keys","forEach","key","append","count","startCase","api","post","apiRoutes","EXPLORE_HUB_ADD_LISTING","growl","notice","message","commit","back","catch","error","onMounted","fetchExploreHubCompanies","fetchExploreHubListingCategories","Quill","theme","placeholder","__exports__"],"sourceRoot":""}