{"version":3,"file":"js/413.js","mappings":"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","sources":["webpack://myzola-admin/./src/services/Helpers.js","webpack://myzola-admin/./src/views/explore/categories/ManageCategories.vue","webpack://myzola-admin/./src/views/explore/categories/ManageCategories.vue?970c","webpack://myzola-admin/./src/views/explore/categories/Main.vue","webpack://myzola-admin/./src/views/explore/categories/Main.vue?5973"],"sourcesContent":["import axios from \"axios\";\r\nimport store from \"@/store\";\r\nimport api from \"@/services/api\";\r\nimport {apiRoutes} from \"@/services/apiRoutes\";\r\n\r\n/* --------------------------\r\n* Variables\r\n* --------------------------\r\n* */\r\nconst materialIconsNamesUrl = \"https://raw.githubusercontent.com/google/material-design-icons/master/font/MaterialIcons-Regular.codepoints\";\r\n\r\n\r\n\r\n/* --------------------------\r\n* Functions\r\n* --------------------------\r\n* */\r\nexport function fetchExploreHubCompanies(){\r\n    //show loader\r\n    store.commit(\"exploreHub/SET_IS_FETCHING_COMPANIES\", true);\r\n\r\n    //make api call\r\n    api.get(apiRoutes.GET_EXPLORE_LISTED_COMPANIES)\r\n            .then(response => {\r\n                store.commit(\"exploreHub/STORE_EXPLORE_LISTED_COMPANIES\", response.data.data);\r\n\r\n                //dismiss loader\r\n                store.commit(\"exploreHub/SET_IS_FETCHING_COMPANIES\", false);\r\n            })\r\n            .catch(error => store.commit(\"exploreHub/SET_IS_FETCHING_COMPANIES\", false));\r\n}\r\nexport function fetchExploreHubListingCategories(){\r\n    //show loading overlay\r\n    store.commit('exploreHub/SET_IS_FETCHING_CATEGORIES', true);\r\n\r\n    api.get(apiRoutes.EXPLORE_HUB_FETCH_LISTING_CATEGORIES)\r\n            .then(response => {\r\n                //store data in vuex store\r\n                store.commit('exploreHub/STORE_EXPLORE_LISTING_CATEGORIES', response.data.data);\r\n                //dismiss loading\r\n                store.commit('exploreHub/SET_IS_FETCHING_CATEGORIES', false);\r\n            })\r\n            .catch(error => store.commit('exploreHub/SET_IS_FETCHING_CATEGORIES', false));\r\n}\r\n\r\n\r\nexport function fetchMaterialIconsNames(){\r\n    //fetch material icons data\r\n    axios.get(materialIconsNamesUrl)\r\n            .then((response) => {\r\n                const materialIconsData = response.data;\r\n                const lines = materialIconsData.split('\\n');\r\n                const names = lines.map((line) => {\r\n                    const parts = line.split(' ');\r\n                    return parts[0];\r\n                });\r\n\r\n                //store names in vuex store\r\n                store.commit('shared/STORE_MATERIAL_ICONS_NAMES', names);\r\n            });\r\n}\r\nexport function randomString (length = 12) {\r\n    let text = \"\";\r\n    let possible = \"A0zBCDy1EFx2GHx3wIJvKL4uMNtOs5PrQR6qSTpU7oVWnXm8YZab9cdefghijkl\";\r\n    for (let i = 0; i < length; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    return text;\r\n}","<script setup>\r\n\r\nimport {ref, computed, onMounted} from \"vue\";\r\nimport {Check, Delete, Plus} from \"@element-plus/icons-vue\";\r\nimport {startCase} from \"lodash-es\";\r\nimport {AwesomeSocialButton} from \"awesome-social-button\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n    fetchExploreHubListingCategories,\r\n    fetchMaterialIconsNames,\r\n    randomString\r\n} from \"@/services/Helpers\";\r\nimport api from \"@/services/api\";\r\nimport {apiRoutes} from \"@/services/apiRoutes\";\r\nimport {ElMessageBox} from \"element-plus\";\r\n\r\n\r\n/* -----------------------------\r\n * Variables\r\n * -----------------------------\r\n * */\r\nconst store = useStore();\r\n\r\nconst isModalLoading = ref(false);\r\nconst searchString = ref(\"\");\r\n\r\nconst isAddingCategories = ref(false);\r\nconst isSelectingNewCategoryIcon = ref(false);\r\nconst newCategory = ref({name:\"\", icon:\"\"});\r\nconst newCategoryIconsSearchString = ref(\"\");\r\nconst newCategories = ref([]);\r\n\r\nconst isEditingCategory = ref(false);\r\nconst editCategory = ref(null);\r\nconst isSelectingEditCategoryIcon = ref(false);\r\n\r\nconst isSelectingMultiple = ref(false);\r\nconst selectedCategories = ref([]);\r\n\r\n\r\n/* -----------------------------\r\n * Computed properties\r\n * -----------------------------\r\n * */\r\nconst isLoading = computed(()=> store.state.exploreHub.isFetchingCategories);\r\nconst materialIconsNames = computed(() =>\r\n        store.state.shared.materialIconsNames\r\n                .filter(icon => !newCategoryIconsSearchString.value.length\r\n                        || icon.includes(newCategoryIconsSearchString.value)));\r\n\r\nconst categories = computed(()=> store.state.exploreHub.listingCategories\r\n        .filter(entry => !searchString.value.length\r\n                || entry.name.toLowerCase().includes(searchString.value.toLowerCase())));\r\n\r\nconst categoryBeingEdited = computed(()=> {\r\n    if(!editCategory.value) return null;\r\n    return categories.value\r\n            .find(entry => entry.id == editCategory.value.id);\r\n});\r\nconst hasEditedCategory = computed(() => {\r\n    if(!categoryBeingEdited.value) return false;\r\n    return Object.keys(categoryBeingEdited.value)\r\n            .some(key => editCategory.value[key] !== categoryBeingEdited.value[key]);\r\n});\r\n\r\n\r\n/* -----------------------------\r\n * Lifecycle Hooks\r\n * -----------------------------\r\n * */\r\nonMounted(()=>{\r\n    //fetch listing categories if not already fetched\r\n    if(!categories.value.length) fetchExploreHubListingCategories();\r\n\r\n    //fetch material icons names is not previously fetched\r\n    if(!materialIconsNames.value.length) {\r\n        fetchMaterialIconsNames();\r\n    }\r\n});\r\n\r\n\r\n/* -----------------------------\r\n * Functions & Methods\r\n * -----------------------------\r\n * */\r\nfunction goToAddCategories(){\r\n    isAddingCategories.value = true;\r\n    //clear icons search string\r\n    newCategoryIconsSearchString.value = \"\";\r\n}\r\nfunction acceptNewCategoryIcon(icon){\r\n    //set new category icon\r\n    newCategory.value.icon = icon;\r\n    //dismiss the select icon popover\r\n    isSelectingNewCategoryIcon.value = false;\r\n}\r\nfunction acceptNewCategory(){\r\n    //validate that name & icon have been entered\r\n    if(!newCategory.value.name.length)\r\n        return $.growl.warning({message: \"Please enter the new category name\"});\r\n    if(!newCategory.value.icon.length)\r\n        return $.growl.warning({message: \"Please select an icon for the new category\"});\r\n\r\n    //required fields have been filled, add category to new categories list\r\n    newCategories.value.push({\r\n        id: randomString(),\r\n        name: newCategory.value.name,\r\n        icon: newCategory.value.icon\r\n    });\r\n\r\n    //reset the new category fields\r\n    newCategory.value = {name:\"\", icon:\"\"};\r\n}\r\nfunction removeNewCategory(id){\r\n    //find index of category with this id\r\n    let index = newCategories.value.findIndex(entry => entry.id == id);\r\n    //if index is found, remove the value that that index\r\n    if(index > -1){\r\n        newCategories.value.splice(index, 1);\r\n    }\r\n}\r\nfunction saveNewCategories(){\r\n    if(!newCategories.value.length) return;\r\n\r\n    //show loading overlay\r\n    isModalLoading.value = true;\r\n\r\n    //make api call to save categories\r\n    api.post(apiRoutes.EXPLORE_HUB_ADD_LISTING_CATEGORIES, {categories: newCategories.value})\r\n            .then(response => {\r\n                //show success message\r\n                $.growl.notice({message: response.data.message});\r\n\r\n                //refresh categories list\r\n                fetchExploreListingCategories();\r\n\r\n                //dismiss add modal\r\n                isAddingCategories.value = false;\r\n\r\n                //clear new categories list\r\n                newCategories.value = [];\r\n\r\n                //hide loading\r\n                isModalLoading.value = false;\r\n\r\n                //clear icons search string\r\n                newCategoryIconsSearchString.value = \"\";\r\n            })\r\n            .catch(error => isModalLoading.value = false)\r\n}\r\n\r\nfunction handleCategoryClick(category){\r\n    if(isSelectingMultiple.value){\r\n        let index = selectedCategories.value.findIndex(entry => entry.id == category.id);\r\n        if(index > -1){\r\n            selectedCategories.value.splice(index, 1);\r\n        }else {\r\n            selectedCategories.value.push(category);\r\n        }\r\n    }else {\r\n        //set this category is the one to edit\r\n        editCategory.value = JSON.parse(JSON.stringify(category));\r\n        //show modal to edit category\r\n        isEditingCategory.value = true;\r\n        //clear icons search string\r\n        newCategoryIconsSearchString.value = \"\";\r\n    }\r\n}\r\nfunction acceptEditCategoryIcon(icon){\r\n    //set new category icon\r\n    editCategory.value.icon = icon;\r\n    //dismiss the select icon popover\r\n    isSelectingEditCategoryIcon.value = false;\r\n}\r\nfunction promptSaveEdits(){\r\n    ElMessageBox.confirm(\r\n            'Sure you want to save these changes?',\r\n            'Warning',\r\n            {\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'Cancel',\r\n                type: 'warning',\r\n            }\r\n    )\r\n            .then(() => {\r\n                //call function to call api to save changes\r\n                saveCategoryChanges();\r\n            })\r\n            .catch(() => {})\r\n}\r\nfunction saveCategoryChanges(){\r\n    //prepare payload to send\r\n    let payload = {\r\n        ...{id: editCategory.value.id},\r\n        ...Object.keys(categoryBeingEdited.value)\r\n                .reduce((changes, key) => {\r\n                    if (editCategory.value[key] !== categoryBeingEdited.value[key]) {\r\n                        changes[key] = editCategory.value[key];\r\n                    }\r\n                    return changes;\r\n                }, {})\r\n    };\r\n\r\n    //show loader\r\n    isModalLoading.value = true;\r\n\r\n    //make api call\r\n    api.post(apiRoutes.EXPLORE_HUB_EDIT_LISTING_CATEGORY, payload)\r\n            .then(response => {\r\n                //show success message\r\n                $.growl.notice({message: response.data.message});\r\n\r\n                //replace updated entry in list\r\n                let categoriesCopy = JSON.parse(JSON.stringify(categories.value));\r\n                //find the edited index\r\n                let index = categoriesCopy.findIndex(entry => entry.id == editCategory.value.id);\r\n                if(index > -1){\r\n                    categoriesCopy[index] = response.data.data;\r\n                    store.commit('exploreHub/STORE_EXPLORE_LISTING_CATEGORIES', categoriesCopy);\r\n                }\r\n\r\n                //dismiss modal\r\n                isEditingCategory.value = false;\r\n                //hide loader\r\n                isModalLoading.value = false;\r\n            })\r\n            .catch(error => isModalLoading.value = false);\r\n}\r\n\r\nfunction toggleMultipleSelection(){\r\n    //clear previous selections\r\n    selectedCategories.value = [];\r\n    //toggle multiple selection\r\n    isSelectingMultiple.value = !isSelectingMultiple.value;\r\n}\r\n\r\nfunction confirmDeleteSelections(){\r\n    ElMessageBox.prompt('Sure you want to delete these selections?\\nPlease give a reason why you want to delete', 'Confirm Delete', {\r\n        confirmButtonText: 'Delete',\r\n        cancelButtonText: 'Cancel',\r\n        inputPlaceholder: \"Type here why you want to delete\",\r\n        inputValidator: (value)=> {\r\n            if(!value || !value.length){\r\n                return \"Please give a reason\";\r\n            }\r\n            return true;\r\n        },\r\n    })\r\n            .then(({ value }) => {\r\n                //prepare payload for the delete api call\r\n                let payload = {ids: selectedCategories.value.map(entry => entry.id), reason:value};\r\n                //call function to call api to save changes\r\n                deleteCategories(payload);\r\n            })\r\n            .catch(() => {})\r\n}\r\nfunction confirmDeleteCategory(){\r\n    ElMessageBox.prompt('Sure you want to delete this category?\\nPlease give a reason why you want to delete', 'Confirm Delete', {\r\n        confirmButtonText: 'Delete',\r\n        cancelButtonText: 'Cancel',\r\n        inputPlaceholder: \"Type here why you want to delete\",\r\n        inputValidator: (value)=> {\r\n            if(!value || !value.length){\r\n                return \"Please give a reason\";\r\n            }\r\n            return true;\r\n        },\r\n    })\r\n            .then(({ value }) => {\r\n                //prepare payload for delete api call\r\n                let payload = {ids: [editCategory.value.id], reason:value};\r\n                //call function to call api to save changes\r\n                deleteCategories(payload);\r\n            })\r\n            .catch(() => {})\r\n}\r\nfunction deleteCategories(payload){\r\n    //show loader\r\n    store.commit(\"exploreHub/SET_IS_FETCHING_CATEGORIES\", true);\r\n    isModalLoading.value = true;\r\n\r\n    //make api call\r\n    api.post(apiRoutes.EXPLORE_HUB_DELETE_LISTING_CATEGORIES, payload)\r\n            .then(response => {\r\n                //show success message\r\n                $.growl.notice({message: response.data.message});\r\n\r\n                //undo selections\r\n                selectedCategories.value = [];\r\n\r\n                //refresh categories list\r\n                fetchExploreListingCategories();\r\n\r\n                //dismiss modal, incase they're deleting from edit dialog\r\n                isEditingCategory.value = false;\r\n\r\n                //hide loader\r\n                isModalLoading.value = false;\r\n\r\n                //undo multiple selection\r\n                isSelectingMultiple.value = false;\r\n            })\r\n            .catch(error => {\r\n                isModalLoading.value = false;\r\n                store.commit(\"exploreHub/SET_IS_FETCHING_CATEGORIES\", false);\r\n            });\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n\r\n    <div class=\"row p-2\" v-loading=\"isLoading\">\r\n        <div class=\"col-sm-12 d-flex m-b-10\">\r\n            <el-button type=\"primary\" :icon=\"Plus\" @click=\"goToAddCategories\" plain>Add Categories</el-button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            <el-input v-model=\"searchString\" style=\"width: 240px\" placeholder=\"Type to search\" clearable />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            <el-button :icon=\"Check\" :type=\"isSelectingMultiple ? 'primary' : ''\" @click=\"toggleMultipleSelection\" :plain=\"!isSelectingMultiple\">Select Multiple to Delete</el-button>\r\n        </div>\r\n        <br>\r\n\r\n        <div class=\"row\" v-if=\"categories.length\">\r\n            <small class=\"text-muted text-italic\" v-if=\"!isSelectingMultiple\">Tap entry to edit</small><br>\r\n            <div class=\"d-flex m-t-10 m-b-10 flex-wrap align-items-center\" v-if=\"isSelectingMultiple\">\r\n                <small class=\"text-italic\" v-if=\"!selectedCategories.length\">Tap to select</small>\r\n\r\n                <small class=\"fw-bold\" v-if=\"selectedCategories.length\">Selected:</small>&nbsp;\r\n                <div class=\"m-1\" v-for=\"category in selectedCategories\"\r\n                     :key=\"'categories-selection-'+category.id\">\r\n                    <el-tag\r\n                            closable\r\n                            @close=\"handleCategoryClick(category)\"\r\n                    >\r\n                        {{ category.name }}\r\n                    </el-tag>\r\n                </div>\r\n\r\n                <el-button class=\"m-l-10\" v-if=\"selectedCategories.length\" @click=\"confirmDeleteSelections\" type=\"danger\" plain>Delete selections</el-button>\r\n            </div>\r\n\r\n            <div v-for=\"category in categories\" :key=\"'explore-categories-list-'+category.id\"\r\n                 class=\"col-md-2 col-sm-4 col-xs-6 p-1 hov-pointer\" @click=\"handleCategoryClick(category)\">\r\n                <el-card shadow=\"hover\">\r\n                    <div class=\"text-center\">\r\n                        <span class=\"material-symbols-outlined fs-40\">{{ category.icon }}</span>\r\n                        <br>\r\n                        {{ category.name }}\r\n                    </div>\r\n                </el-card>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-else>\r\n            <p class=\"p-5 text-center\">\r\n                <small>No categories found</small>\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Modal to add categories -->\r\n    <el-dialog\r\n            v-model=\"isAddingCategories\">\r\n\r\n        <div class=\"row\" v-loading=\"isModalLoading\">\r\n            <div class=\"row m-b-20\">\r\n                <h6 class=\"fw-bold\">\r\n                    <small class=\"text-muted\">Add Categories</small>\r\n                </h6>\r\n\r\n                <div class=\"row p-l-20\">\r\n                    <div class=\"col-md-4\">\r\n                        <small>New Category Name</small><br>\r\n                        <el-input v-model=\"newCategory.name\" placeholder=\"Enter name here\"></el-input>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <small>Category Icon</small>\r\n                        <br>\r\n                        <div class=\"d-flex\">\r\n                            <div v-if=\"newCategory.icon.length\">\r\n                                <span class=\"material-symbols-outlined fs-35\">{{ newCategory.icon }}</span>\r\n                            </div>\r\n                            &nbsp;&nbsp;\r\n\r\n                            <el-popover :visible=\"isSelectingNewCategoryIcon\" :width=\"200\">\r\n                                <div class=\"row\">\r\n                                    <el-input v-model=\"newCategoryIconsSearchString\" placeholder=\"Type to search icon\"></el-input>\r\n                                    <div class=\"d-flex flex-wrap m-t-10\"\r\n                                         style=\"max-height: 250px;overflow-y: scroll;overflow-x: hidden;\">\r\n                                        <div style=\"margin:1px;cursor: pointer\"\r\n                                             v-for=\"(icon, index) in materialIconsNames\"\r\n                                             @click=\"acceptNewCategoryIcon(icon)\">\r\n                                            <span class=\"material-symbols-outlined fs-35\">{{ icon }}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <template #reference>\r\n                                    <el-button @click=\"isSelectingNewCategoryIcon = !isSelectingNewCategoryIcon\"\r\n                                               size=\"small\" round>\r\n                                        {{ newCategory.icon.length ? \"Change\" : \"Select icon\" }}\r\n                                    </el-button>\r\n                                </template>\r\n                            </el-popover>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <small>&nbsp;</small><br>\r\n                        <el-button @click=\"acceptNewCategory\" plain>Add Category</el-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <template v-if=\"newCategories.length\">\r\n                <el-divider />\r\n\r\n                <h6 class=\"f-w-600\">\r\n                    <small>New Categories to Save</small>\r\n                </h6>\r\n                <el-table :data=\"newCategories\" border style=\"width: 100%\">\r\n                    <el-table-column prop=\"name\" label=\"Category\"/>\r\n                    <el-table-column label=\"Icon\">\r\n                        <template #default=\"scope\">\r\n                            <span class=\"material-symbols-outlined fs-35\">{{ scope.row.icon }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"Remove\">\r\n                        <template #default=\"scope\">\r\n                            <el-button @click=\"removeNewCategory(scope.row.id)\" type=\"danger\" :icon=\"Delete\" circle />\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <el-divider />\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3\">\r\n                        <el-button type=\"primary\" @click=\"saveNewCategories\">Save Categories</el-button>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </div>\r\n\r\n    </el-dialog>\r\n\r\n    <!-- Modal to edit category -->\r\n    <el-dialog\r\n            width=\"40%\"\r\n            v-model=\"isEditingCategory\">\r\n\r\n        <div class=\"row\" v-loading=\"isModalLoading\" v-if=\"editCategory\">\r\n            <div class=\"row m-b-20\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <h6 class=\"fw-bold\">\r\n                        <small class=\"text-muted\">Edit category details below or </small>\r\n                    </h6>\r\n                    &nbsp;&nbsp;&nbsp;\r\n\r\n                    <el-button type=\"danger\" @click=\"confirmDeleteCategory\" plain>Delete category</el-button>\r\n                </div>\r\n                <br>\r\n                <el-divider />\r\n\r\n                <div class=\"row p-l-20\">\r\n                    <div class=\"col-md-12\">\r\n                        <small>Edit Category Name</small><br>\r\n                        <el-input v-model=\"editCategory.name\" placeholder=\"Enter name here\" style=\"max-width: 200px;\"></el-input>\r\n                    </div>\r\n                    <div class=\"col-md-12 m-t-20\">\r\n                        <small>Change Associated Icon</small><br>\r\n                        <div class=\"d-flex\">\r\n                            <div>\r\n                                <span class=\"material-symbols-outlined fs-35\">{{ editCategory.icon }}</span>\r\n                            </div>\r\n                            &nbsp;&nbsp;\r\n\r\n                            <el-popover :visible=\"isSelectingEditCategoryIcon\" :width=\"200\">\r\n                                <div class=\"row\">\r\n                                    <el-input v-model=\"newCategoryIconsSearchString\" placeholder=\"Type to search icon\"></el-input>\r\n                                    <div class=\"d-flex flex-wrap m-t-10\"\r\n                                         style=\"max-height: 250px;overflow-y: scroll;overflow-x: hidden;\">\r\n                                        <div style=\"margin:1px;cursor: pointer\"\r\n                                             v-for=\"(icon, index) in materialIconsNames\"\r\n                                             @click=\"acceptEditCategoryIcon(icon)\">\r\n                                            <span class=\"material-symbols-outlined fs-35\">{{ icon }}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <template #reference>\r\n                                    <el-button @click=\"isSelectingEditCategoryIcon = !isSelectingEditCategoryIcon\"\r\n                                               size=\"small\" round>Change</el-button>\r\n                                </template>\r\n                            </el-popover>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr class=\"m-2\">\r\n                <div class=\"col-sm-12\">\r\n                    <el-button type=\"primary\" @click=\"promptSaveEdits\" :disabled=\"!hasEditedCategory\">Save Edits</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </el-dialog>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n.icons_container{\r\n    max-height: 250px;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n}\r\n</style>","import script from \"./ManageCategories.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageCategories.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageCategories.vue?vue&type=style&index=0&id=6b233b1d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b233b1d\"]])\n\nexport default __exports__","<script setup>\r\n\r\nimport {useRouter} from \"vue-router\";\r\nimport {onMounted} from \"vue\";\r\nimport ManageCategories from \"@/views/explore/categories/ManageCategories.vue\";\r\n\r\n/* ------------------------------\r\n* Variables & Properties\r\n* ------------------------------\r\n* */\r\nconst router = useRouter();\r\n\r\n/* ------------------------------\r\n* Component Lifecycle hooks\r\n* ------------------------------\r\n* */\r\nonMounted(()=>{\r\n    //router.push({name: 'explore.companies.listed'});\r\n});\r\n\r\nfunction tabChanged(tab){\r\n    switch (tab){\r\n        case 'active':\r\n            //router.push({name: 'explore.companies.listed'})\r\n        case 'reviews':\r\n            //router.push({name: 'explore.companies.listed'})\r\n        case 'deleted':\r\n            //router.push({name: 'explore.companies.listed'})\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n\r\n    <div class=\"pagetitle\">\r\n        <h1>Categories</h1>\r\n        <nav>\r\n            <ol class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><router-link :to=\"{name:'dashboard'}\">Home</router-link></li>\r\n                <li class=\"breadcrumb-item\">Explore</li>\r\n                <li class=\"breadcrumb-item active\">Listing Categories</li>\r\n            </ol>\r\n        </nav>\r\n    </div>\r\n\r\n\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <br>\r\n\r\n            <!-- Default Tabs -->\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                <li class=\"nav-item\" role=\"presentation\">\r\n                    <button class=\"nav-link active\"\r\n                            @click=\"tabChanged('active')\"\r\n                            data-bs-toggle=\"tab\" data-bs-target=\"#explore_categories_active\"\r\n                            type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"false\" tabindex=\"-1\">Categories</button>\r\n                </li>\r\n                <li class=\"nav-item\" role=\"presentation\">\r\n                    <button class=\"nav-link\"\r\n                            @click=\"tabChanged('deleted')\"\r\n                            data-bs-toggle=\"tab\" data-bs-target=\"#explore_categories_deleted\"\r\n                            type=\"button\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"true\">Archived</button>\r\n                </li>\r\n            </ul>\r\n            <div class=\"tab-content pt-2\" id=\"myTabContent\">\r\n                <div class=\"tab-pane fade show active p-1\" id=\"explore_categories_active\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                    <manage-categories></manage-categories>\r\n                </div>\r\n                <div class=\"tab-pane fade\" id=\"explore_categories_deleted\" role=\"tabpanel\" aria-labelledby=\"contact-tab\">\r\n                    Will browse archived categories here\r\n                </div>\r\n            </div>\r\n            <!-- End Default Tabs -->\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Main.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Main.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["materialIconsNamesUrl","fetchExploreHubCompanies","store","commit","api","get","apiRoutes","GET_EXPLORE_LISTED_COMPANIES","then","response","data","catch","error","fetchExploreHubListingCategories","EXPLORE_HUB_FETCH_LISTING_CATEGORIES","fetchMaterialIconsNames","axios","materialIconsData","lines","split","names","map","line","parts","randomString","length","text","possible","i","charAt","Math","floor","random","useStore","isModalLoading","ref","searchString","isAddingCategories","isSelectingNewCategoryIcon","newCategory","name","icon","newCategoryIconsSearchString","newCategories","isEditingCategory","editCategory","isSelectingEditCategoryIcon","isSelectingMultiple","selectedCategories","isLoading","computed","state","exploreHub","isFetchingCategories","materialIconsNames","shared","filter","value","includes","categories","listingCategories","entry","toLowerCase","categoryBeingEdited","find","id","hasEditedCategory","Object","keys","some","key","goToAddCategories","acceptNewCategoryIcon","acceptNewCategory","push","$","growl","warning","message","removeNewCategory","index","findIndex","splice","saveNewCategories","post","EXPLORE_HUB_ADD_LISTING_CATEGORIES","notice","fetchExploreListingCategories","handleCategoryClick","category","JSON","parse","stringify","acceptEditCategoryIcon","promptSaveEdits","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","saveCategoryChanges","payload","reduce","changes","EXPLORE_HUB_EDIT_LISTING_CATEGORY","categoriesCopy","toggleMultipleSelection","confirmDeleteSelections","prompt","inputPlaceholder","inputValidator","ids","reason","deleteCategories","confirmDeleteCategory","EXPLORE_HUB_DELETE_LISTING_CATEGORIES","onMounted","__exports__","useRouter","tabChanged","tab"],"sourceRoot":""}