{"version":3,"file":"js/147.js","mappings":"gyHAsBA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,IAAUD,EAAAA,EAAAA,IAAI,CAAC,GAEfE,IAAaF,EAAAA,EAAAA,IAAI,CAAC,UAAW,WAAY,cAC/C,IAAIG,IAAyBH,EAAAA,EAAAA,IAAI,MACjC,MAAMI,IAAQJ,EAAAA,EAAAA,IAAI,IACZK,IAAaL,EAAAA,EAAAA,IAAI,IAEjBM,IAAkBN,EAAAA,EAAAA,IAAI,IACtBO,IAAiBP,EAAAA,EAAAA,IAAI,IACrBQ,IAAcR,EAAAA,EAAAA,IAAI,MAClBS,IAAmBT,EAAAA,EAAAA,KAAI,GACvBU,IAAmBV,EAAAA,EAAAA,KAAI,GACvBW,IAAeX,EAAAA,EAAAA,IAAI,IACnBY,IAAaZ,EAAAA,EAAAA,IAAI,CACnBa,KAAK,KACLC,OAAO,KACPC,UAAU,OAERC,IAAchB,EAAAA,EAAAA,IAAI,IAElBiB,IAAejB,EAAAA,EAAAA,IAAI,IAOzB,IAAIkB,IAAYC,EAAAA,EAAAA,KAAS,IAAKxB,EAAMyB,MAAMC,WAAWH,YACjDI,IAAaH,EAAAA,EAAAA,KAAS,IAAKxB,EAAMyB,MAAMC,WAAWE,oBACtD,MAAMC,IAAgBL,EAAAA,EAAAA,KAAS,IAAKb,GAAgBmB,MAAMC,QAAOC,IAAUA,EAAMC,UAAYD,EAAME,WAC7FC,IAAkBX,EAAAA,EAAAA,KAAS,IAAKb,GAAgBmB,MAAMC,QAAOC,GAASA,EAAMC,YAC5EG,IAAqBZ,EAAAA,EAAAA,KAAS,IAC5BX,GAAYiB,MACTnB,GAAgBmB,MACdO,MAAKL,GAASA,EAAMM,IAAMzB,GAAYiB,MAAMQ,KAFvB,OAI5BC,IAAmBf,EAAAA,EAAAA,KAAS,MAC1BY,GAAmBN,OAChBU,OAAOC,KAAKL,GAAmBN,OAC7BY,MAAKC,GAAO9B,GAAYiB,MAAMa,KAASP,GAAmBN,MAAMa,OAGvEC,IAAapB,EAAAA,EAAAA,KAAS,IAAKF,GAAaQ,MAAMC,QAAOC,IAAUA,EAAMC,YACrEY,IAAerB,EAAAA,EAAAA,KAAS,IAAKF,GAAaQ,MAAMC,QAAOC,GAASA,EAAMC,YAkD5E,SAASa,KACLC,EAAAA,EAAMC,IAAI,6BACDC,MAAKC,GACElC,GAAac,MAAQoB,EAASC,KACrBC,KAAIpB,IACDA,EAAMqB,MAAQC,EAAAA,KAAAA,CAAQ,KAA4BtB,EAAMqB,SACjDrB,MAEvC,CACA,SAASuB,GAAcC,GACnB,MAAMC,EAAQD,EAAME,OAAOD,MAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAAK,CACnC,MAAME,EAAOJ,EAAME,GACbG,EAAS,IAAIC,WAEnBD,EAAOE,OAAUC,IACbxD,GAAMqB,MAAMoC,KAAK,CACbC,KAAMN,EAAKM,KACXC,IAAKH,EAAEP,OAAOW,SAElB3D,GAAWoB,MAAMoC,KAAKL,EAAK,EAG/BC,EAAOQ,cAAcT,EACzB,CAIAU,EAAE,iBAAiBC,IAAI,GAC3B,CACA,SAASC,GAAaC,GAClBjE,GAAMqB,MAAM6C,OAAOD,EAAO,GAC1BhE,GAAWoB,MAAM6C,OAAOD,EAAO,EACnC,CACA,SAASE,KAEL,IAAI3D,GAAWa,MAAMZ,OAASD,GAAWa,MAAMZ,KAAK0C,OAChD,OAAOiB,EAAAA,GAAUC,QAAQ,gCAC7B,IAAI7D,GAAWa,MAAMX,SAAWF,GAAWa,MAAMX,OAAO4D,WAAWnB,OAC/D,OAAOiB,EAAAA,GAAUC,QAAQ,mCAE7B,GAAGE,MAAM/D,GAAWa,MAAMX,QACtB,OAAO0D,EAAAA,GAAUC,QAAQ,+BAE7B,GAAiC,MAA9B7D,GAAWa,MAAMV,WAAqBH,GAAWa,MAAMV,UAAUwC,OAAO,CACvE,GAAGvC,GAAYS,MAAMO,MAAKL,GAClBA,EAAMZ,UAAU2D,WAAWE,eACxBhE,GAAWa,MAAMV,UAAU2D,WAAWE,gBAC7C,OAAOJ,EAAAA,GAAUC,QAAQ,wCAC7B,GAAGjD,GAAcC,MAAMO,MAAKL,GACpBA,EAAMZ,UAAU2D,WAAWE,eACxBhE,GAAWa,MAAMV,UAAU2D,WAAWE,gBAC7C,OAAOJ,EAAAA,GAAUC,QAAQ,uCACjC,CAGAzD,GAAYS,MAAMoC,KAAKgB,KAAKC,MAAMD,KAAKE,UAAUnE,GAAWa,SAG5Db,GAAWa,MAAQ,CAACZ,KAAK,KAAKC,OAAO,KAAKC,UAAU,MAGpDN,GAAiBgB,OAAQ,CAC7B,CACA,SAASuD,GAAcC,GACnBzE,GAAYiB,MAAQoD,KAAKC,MAAMD,KAAKE,UAAUE,IAC9CvE,GAAiBe,OAAQ,CAC7B,CACA,SAASyD,KAEL,IAAI1E,GAAYiB,MAAMZ,OAASL,GAAYiB,MAAMZ,KAAK0C,OAClD,OAAOiB,EAAAA,GAAUC,QAAQ,gCAC7B,IAAIjE,GAAYiB,MAAMX,SAAWN,GAAYiB,MAAMX,OAAO4D,WAAWnB,OACjE,OAAOiB,EAAAA,GAAUC,QAAQ,mCAE7B,GAAGE,MAAMnE,GAAYiB,MAAMX,QACvB,OAAO0D,EAAAA,GAAUC,QAAQ,+BAE7B,GAAkC,MAA/BjE,GAAYiB,MAAMV,WAAqBP,GAAYiB,MAAMV,UAAUwC,OAAO,CACzE,GAAGvC,GAAYS,MAAMO,MAAKL,GAClBA,EAAMZ,UAAU2D,WAAWE,eACxBpE,GAAYiB,MAAMV,UAAU2D,WAAWE,gBAC9C,OAAOJ,EAAAA,GAAUC,QAAQ,wCAC7B,GAAGlE,GAAekB,MAAMO,MAAKL,GACrBA,EAAMZ,UAAU2D,WAAWE,eACxBpE,GAAYiB,MAAMV,UAAU2D,WAAWE,gBAC9C,OAAOJ,EAAAA,GAAUC,QAAQ,uCACjC,CAGAlE,GAAekB,MAAMoC,KAAKgB,KAAKC,MAAMD,KAAKE,UAAUvE,GAAYiB,SAEhE,IAAIwD,EAAU3E,GAAgBmB,MAAMO,MAAKL,GAASA,EAAMM,IAAMzB,GAAYiB,MAAMQ,KAC7EgD,IAASA,EAAQpD,QAAS,GAE7BnB,GAAiBe,OAAQ,CAC7B,CACA,SAAS0D,GAAiBd,EAAOY,GAE7B1E,GAAekB,MAAM6C,OAAOD,EAAO,GAEnC,IAAIe,EAAW9E,GAAgBmB,MAAMO,MAAKL,GAASA,EAAMM,IAAMgD,EAAQhD,KACvEmD,EAASvD,QAAS,CACtB,CAEA,SAASwD,KAEL,IAAIpF,GAAQwB,MAAM6D,QAAUrF,GAAQwB,MAAM6D,MAAM/B,OAC5C,OAAOiB,EAAAA,GAAUC,QAAQ,sBAG7B,IAAIxE,GAAQwB,MAAM8D,YAActF,GAAQwB,MAAM8D,UAAUhC,OACpD,OAAOiB,EAAAA,GAAUC,QAAQ,mCAG7B,IAAIxE,GAAQwB,MAAM+D,aAAevF,GAAQwB,MAAM+D,WAAWd,WAAWnB,OACjE,OAAOiB,EAAAA,GAAUC,QAAQ,6BAG7B,IAAIxE,GAAQwB,MAAMgE,cAAgBxF,GAAQwB,MAAMgE,YAAYf,WAAWnB,OACnE,OAAOiB,EAAAA,GAAUC,QAAQ,8BAG7B,IAAIiB,EAAcvF,GAAuBwF,kBACzC,IAAID,IACQA,EAAYhB,WAAWnB,QACT,WAAfmC,EACP,OAAOlB,EAAAA,GAAUC,QAAQ,wCAG7B,IAAIxE,GAAQwB,MAAMmE,WAAa3F,GAAQwB,MAAMmE,SAASrC,OAClD,OAAOiB,EAAAA,GAAUC,QAAQ,4BAG7B,IAAIxE,GAAQwB,MAAMoE,SAAW5F,GAAQwB,MAAMoE,OAAOtC,OAC9C,OAAOiB,EAAAA,GAAUC,QAAQ,0BAI7BxE,GAAQwB,MAAMiE,YAAcA,EAG5B,IAAII,EAAU,IAAIC,SAEdC,EAAa,CAAC,KAAM,QAAS,YAAa,aAAc,cAAe,cAAe,WAAY,UAItG,GAHAA,EAAWC,SAAQ3D,GAAOwD,EAAQI,OAAO5D,EAAKrC,GAAQwB,MAAMa,MAGzDjC,GAAWoB,MAAM8B,OAChB,IAAK,IAAI4C,EAAQ,EAAGA,EAAQ9F,GAAWoB,MAAM8B,OAAQ4C,IACjDL,EAAQI,OAAO,SAASC,KAAU9F,GAAWoB,MAAM0E,IAI3D,GAAGnF,GAAYS,MAAM8B,OACjB,IAAK,IAAI4C,EAAQ,EAAGA,EAAQnF,GAAYS,MAAM8B,OAAQ4C,IAAS,CAC3D,IAAIf,EAAWpE,GAAYS,MAAM0E,GACjCL,EAAQI,OAAO,YAAYC,aAAkBf,EAAStE,QACtDgF,EAAQI,OAAO,YAAYC,WAAgBf,EAASvE,MACpDiF,EAAQI,OAAO,YAAYC,gBAAqBf,EAASrE,YAAaqF,EAAAA,EAAAA,GAAUhB,EAASvE,MAC7F,CAGJ,GAAGN,GAAekB,MAAM8B,OACpB,IAAK,IAAI4C,EAAQ,EAAGA,EAAQ5F,GAAekB,MAAM8B,OAAQ4C,IAAS,CAC9D,IAAIf,EAAW7E,GAAekB,MAAM0E,GACpCL,EAAQI,OAAO,mBAAmBC,SAAcf,EAASnD,IACzD6D,EAAQI,OAAO,mBAAmBC,aAAkBf,EAAStE,QAC7DgF,EAAQI,OAAO,mBAAmBC,WAAgBf,EAASvE,MAC3DiF,EAAQI,OAAO,mBAAmBC,gBAAqBf,EAASrE,YAAaqF,EAAAA,EAAAA,GAAUhB,EAASvE,MACpG,CAGDiB,GAAgBL,MAAM8B,QACrBzB,GAAgBL,MAAMwE,SAAQ,CAACI,EAAQhC,KACnCyB,EAAQI,OAAO,oBAAoB7B,KAAUgC,EAAOpE,GAAG,IAI5DO,GAAaf,MAAM8B,QAClBf,GAAaf,MAAMwE,SAAQ,CAACzC,EAAMa,KAC9ByB,EAAQI,OAAO,iBAAiB7B,KAAUb,EAAKvB,GAAG,IAK1DlC,EAAU0B,OAAQ,EAGlB6E,EAAAA,EAAIC,KAAKC,EAAAA,GAAUC,yBAA0BX,GACpClD,MAAKC,IAEFqB,EAAEwC,MAAMC,OAAO,CAACC,QAAS/D,EAASC,KAAK8D,UAGvC,IAAIC,EAAehC,KAAKC,MAAMD,KAAKE,UAAUpF,EAAMyB,MAAMC,WAAWyF,iBAChEzC,EAAQwC,EAAaE,WAAUpF,GAASA,EAAMM,IAAMhC,GAAQwB,MAAMQ,KACnEoC,GAAS,IACRwC,EAAaxC,GAASxB,EAASC,KAAKA,KACpCnD,EAAMqH,OAAO,mCAAoCH,IAIrD9G,EAAU0B,OAAQ,EAGlB5B,EAAOoH,MAAM,IAGhBC,OAAMC,GAASpH,EAAU0B,OAAQ,GAC9C,C,OA9PA2F,EAAAA,EAAAA,KAAU,KACN,GAAyC,MAAtCzH,EAAMyB,MAAMC,WAAWgG,YACtB,OAAOxH,EAAOgE,KAAK,CAACC,KAAM,gCAI9B7D,GAAQwB,MAAQoD,KAAKC,MAAMD,KAAKE,UAAUpF,EAAMyB,MAAMC,WAAWgG,cAIjE/G,GAAgBmB,MAAQoD,KAAKC,MAAMD,KAAKE,UAAUpF,EAAMyB,MAAMC,WAAWgG,YAAYC,WACrFhH,GAAgBmB,MAAQnB,GAAgBmB,MAC/BsB,KAAIpB,IACDA,EAAMC,SAAU,EAChBD,EAAME,QAAS,EACRF,KAInBV,GAAaQ,MAAQoD,KAAKC,MAAMD,KAAKE,UAAUpF,EAAMyB,MAAMC,WAAWgG,YAAYjH,QAClFa,GAAaQ,MAAQR,GAAaQ,MACzBsB,KAAIpB,IACDA,EAAMC,SAAU,EACTD,KAIfT,GAAUO,MAAM8B,SAAQgE,EAAAA,EAAAA,MACxBjG,GAAWG,MAAM8B,SAAQiE,EAAAA,EAAAA,MAC7B/E,KAGAyB,EAAE,sBAAsBuD,KAAKxH,GAAQwB,MAAMiE,aAC3CvF,GAAyB,IAAIuH,MAAM,qBAAsB,CACrDC,MAAO,OACPC,YAAa,2BACf,I,wuVCzGN,MAAMC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://myzola-admin/./src/views/explore_hub/listings/active/Edit.vue","webpack://myzola-admin/./src/views/explore_hub/listings/active/Edit.vue?23aa"],"sourcesContent":["<script setup>\r\n\r\nimport CloseButton from \"@/components/CloseButton.vue\";\r\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n    fetchExploreHubCompanies,\r\n    fetchExploreHubListingCategories, isSmallScreen, moneyFormatter\r\n} from \"@/services/Helpers\";\r\nimport InputLabel from \"@/components/InputLabel.vue\";\r\nimport {startCase} from \"lodash-es\";\r\nimport {Plus} from \"@element-plus/icons-vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport api from \"@/services/api\";\r\nimport {apiRoutes} from \"@/services/apiRoutes\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n/* -----------------------------\r\n * Properties & Variables\r\n * -----------------------------\r\n * */\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst isLoading = ref(false);\r\nconst listing = ref({});\r\n\r\nconst placements = ref(['for_you', 'featured', 'exclusive']);\r\nlet descriptionQuillEditor = ref(null);\r\nconst media = ref([]);\r\nconst mediaFiles = ref([]);\r\n\r\nconst listingPayments = ref([]);\r\nconst editedPayments = ref([]);\r\nconst editPayment = ref(null);\r\nconst isAddingPayments = ref(false);\r\nconst isEditingPayment = ref(false);\r\nconst paymentModes = ref([]);\r\nconst newPayment = ref({\r\n    mode:null,\r\n    amount:null,\r\n    reference:null\r\n});\r\nconst newPayments = ref([]);\r\n\r\nconst listingMedia = ref([]);\r\n\r\n\r\n/* -----------------------------\r\n * Computed Properties\r\n * -----------------------------\r\n * */\r\nlet companies = computed(()=> store.state.exploreHub.companies);\r\nlet categories = computed(()=> store.state.exploreHub.listingCategories);\r\nconst savedPayments = computed(()=> listingPayments.value.filter(entry => !entry.deleted && !entry.edited))\r\nconst deletedPayments = computed(()=> listingPayments.value.filter(entry => entry.deleted));\r\nconst paymentBeingEdited = computed(()=> {\r\n    if(!editPayment.value) return null;\r\n    return listingPayments.value\r\n            .find(entry => entry.id == editPayment.value.id);\r\n});\r\nconst hasEditedPayment = computed(() => {\r\n    if(!paymentBeingEdited.value) return false;\r\n    return Object.keys(paymentBeingEdited.value)\r\n            .some(key => editPayment.value[key] !== paymentBeingEdited.value[key]);\r\n});\r\n\r\nconst savedMedia = computed(()=> listingMedia.value.filter(entry => !entry.deleted));\r\nconst deletedMedia = computed(()=> listingMedia.value.filter(entry => entry.deleted));\r\n\r\n/* -----------------------------\r\n * Hooks\r\n * -----------------------------\r\n * */\r\nonMounted(()=> {\r\n    if(store.state.exploreHub.editListing == null) {\r\n        return router.push({name: 'explore_hub.listings.active'});\r\n    }\r\n\r\n    //copy details of listing being edited\r\n    listing.value = JSON.parse(JSON.stringify(store.state.exploreHub.editListing));\r\n\r\n\r\n    //copy listing payments to manage them\r\n    listingPayments.value = JSON.parse(JSON.stringify(store.state.exploreHub.editListing.payments));\r\n    listingPayments.value = listingPayments.value\r\n            .map(entry => {\r\n                entry.deleted = false;\r\n                entry.edited = false;\r\n                return entry;\r\n            });\r\n\r\n    //copy listing media\r\n    listingMedia.value = JSON.parse(JSON.stringify(store.state.exploreHub.editListing.media));\r\n    listingMedia.value = listingMedia.value\r\n            .map(entry => {\r\n                entry.deleted = false;\r\n                return entry;\r\n            });\r\n\r\n    //fetch required resource which aren't loaded yet\r\n    if(!companies.value.length) fetchExploreHubCompanies();\r\n    if(!categories.value.length) fetchExploreHubListingCategories();\r\n    fetchPaymentModes();\r\n\r\n    //set the default content for the company's about\r\n    $(\"#descriptionEditor\").html(listing.value.description);\r\n    descriptionQuillEditor = new Quill('#descriptionEditor', {\r\n        theme: 'snow',\r\n        placeholder: 'Enter listing body here'\r\n    });\r\n});\r\n\r\n\r\n/* -----------------------------\r\n * Methods & Functions\r\n * -----------------------------\r\n * */\r\nfunction fetchPaymentModes(){\r\n    axios.get('/assets/PaymentModes.json')\r\n            .then(response =>\r\n                    paymentModes.value = response.data\r\n                            .map(entry => {\r\n                                entry.image = require(`@/assets/images/payments/${entry.image}`);\r\n                                return entry;\r\n                            }));\r\n}\r\nfunction processUpload(event){\r\n    const files = event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            media.value.push({\r\n                name: file.name,\r\n                url: e.target.result,\r\n            });\r\n            mediaFiles.value.push(file);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n    //reset selection\r\n    $(\"#listingMedia\").val(\"\");\r\n}\r\nfunction removeUpload(index){\r\n    media.value.splice(index, 1);\r\n    mediaFiles.value.splice(index, 1);\r\n}\r\nfunction acceptNewPayment(){\r\n    //validate that all required fields have been entered: mode & amount\r\n    if(!newPayment.value.mode || !newPayment.value.mode.length)\r\n        return ElMessage.warning(\"Please select a payment mode\");\r\n    if(!newPayment.value.amount || !newPayment.value.amount.toString().length)\r\n        return ElMessage.warning(\"Please enter the payment amount\");\r\n    //validate that a valid payment amount has been entered\r\n    if(isNaN(newPayment.value.amount))\r\n        return ElMessage.warning(\"Please enter a valid amount\");\r\n    //check that reference code is not repeated\r\n    if(newPayment.value.reference != null && newPayment.value.reference.length){\r\n        if(newPayments.value.find(entry =>\r\n                entry.reference.toString().toLowerCase()\r\n                == newPayment.value.reference.toString().toLowerCase()))\r\n            return ElMessage.warning(\"Reference code has already been used\");\r\n        if(savedPayments.value.find(entry =>\r\n                entry.reference.toString().toLowerCase()\r\n                == newPayment.value.reference.toString().toLowerCase()))\r\n            return ElMessage.warning(\"Reference code has already been used\");\r\n    }\r\n\r\n    //everything's ok, add the new payment to list of payments\r\n    newPayments.value.push(JSON.parse(JSON.stringify(newPayment.value)));\r\n\r\n    //clear the fields\r\n    newPayment.value = {mode:null,amount:null,reference:null};\r\n\r\n    //dismiss the add payment dialog\r\n    isAddingPayments.value = false;\r\n}\r\nfunction goEditPayment(payment){\r\n    editPayment.value = JSON.parse(JSON.stringify(payment));\r\n    isEditingPayment.value = true;\r\n}\r\nfunction acceptPaymentEdits(){\r\n    //validate that all required fields have been entered: mode & amount\r\n    if(!editPayment.value.mode || !editPayment.value.mode.length)\r\n        return ElMessage.warning(\"Please select a payment mode\");\r\n    if(!editPayment.value.amount || !editPayment.value.amount.toString().length)\r\n        return ElMessage.warning(\"Please enter the payment amount\");\r\n    //validate that a valid payment amount has been entered\r\n    if(isNaN(editPayment.value.amount))\r\n        return ElMessage.warning(\"Please enter a valid amount\");\r\n    //check that reference code is not repeated\r\n    if(editPayment.value.reference != null && editPayment.value.reference.length){\r\n        if(newPayments.value.find(entry =>\r\n                entry.reference.toString().toLowerCase()\r\n                == editPayment.value.reference.toString().toLowerCase()))\r\n            return ElMessage.warning(\"Reference code has already been used\");\r\n        if(editedPayments.value.find(entry =>\r\n                entry.reference.toString().toLowerCase()\r\n                == editPayment.value.reference.toString().toLowerCase()))\r\n            return ElMessage.warning(\"Reference code has already been used\");\r\n    }\r\n\r\n    //add payment being edited to edited payments\r\n    editedPayments.value.push(JSON.parse(JSON.stringify(editPayment.value)));\r\n    //unmark payment as edited in the original list\r\n    let payment = listingPayments.value.find(entry => entry.id == editPayment.value.id);\r\n    if(payment) payment.edited = true;\r\n    //dismiss modal\r\n    isEditingPayment.value = false;\r\n}\r\nfunction removeFromEdited(index, payment){\r\n    //remove payment from edited list\r\n    editedPayments.value.splice(index, 1);\r\n    //make payment not edited\r\n    let _payment = listingPayments.value.find(entry => entry.id == payment.id);\r\n    _payment.edited = false;\r\n}\r\n\r\nfunction handleSaveEdits(){\r\n    //validate title\r\n    if(!listing.value.title || !listing.value.title.length){\r\n        return ElMessage.warning(\"Please enter title\");\r\n    }\r\n    //validate placement\r\n    if(!listing.value.placement || !listing.value.placement.length){\r\n        return ElMessage.warning(\"Please select listing placement\");\r\n    }\r\n    //validate company selection\r\n    if(!listing.value.company_id || !listing.value.company_id.toString().length){\r\n        return ElMessage.warning(\"Please select the company\");\r\n    }\r\n    //validate category selection\r\n    if(!listing.value.category_id || !listing.value.category_id.toString().length){\r\n        return ElMessage.warning(\"Please select the category\");\r\n    }\r\n    //validate description\r\n    let description = descriptionQuillEditor.getSemanticHTML();\r\n    if(!description\r\n            || !description.toString().length\r\n            || description == \"<p></p>\") {\r\n        return ElMessage.warning(\"Please enter the listing description\")\r\n    }\r\n    //validate start date\r\n    if(!listing.value.start_at || !listing.value.start_at.length){\r\n        return ElMessage.warning(\"Please select start date\");\r\n    }\r\n    //validate end date\r\n    if(!listing.value.end_at || !listing.value.end_at.length){\r\n        return ElMessage.warning(\"Please select end date\");\r\n    }\r\n\r\n    //set description from rich text editor\r\n    listing.value.description = description;\r\n\r\n    //prepare request payload\r\n    let payload = new FormData();\r\n    //add select listing details to the form data\r\n    let properties = ['id', 'title', 'placement', 'company_id', 'category_id', 'description', 'start_at', 'end_at'];\r\n    properties.forEach(key => payload.append(key, listing.value[key]));\r\n\r\n    //append media to payload\r\n    if(mediaFiles.value.length) {\r\n        for (let count = 0; count < mediaFiles.value.length; count++) {\r\n            payload.append(`media[${count}]`, mediaFiles.value[count]);\r\n        }\r\n    }\r\n    //append new payments to payload\r\n    if(newPayments.value.length){\r\n        for (let count = 0; count < newPayments.value.length; count++) {\r\n            let _payment = newPayments.value[count];\r\n            payload.append(`payments[${count}][amount]`, _payment.amount);\r\n            payload.append(`payments[${count}][mode]`, _payment.mode);\r\n            payload.append(`payments[${count}][reference]`, _payment.reference || startCase(_payment.mode));\r\n        }\r\n    }\r\n    //append edited payments to payload\r\n    if(editedPayments.value.length){\r\n        for (let count = 0; count < editedPayments.value.length; count++) {\r\n            let _payment = editedPayments.value[count];\r\n            payload.append(`edited_payments[${count}][id]`, _payment.id);\r\n            payload.append(`edited_payments[${count}][amount]`, _payment.amount);\r\n            payload.append(`edited_payments[${count}][mode]`, _payment.mode);\r\n            payload.append(`edited_payments[${count}][reference]`, _payment.reference || startCase(_payment.mode));\r\n        }\r\n    }\r\n    //add any deleted payments\r\n    if(deletedPayments.value.length){\r\n        deletedPayments.value.forEach((social, index) => {\r\n            payload.append(`deleted_payments[${index}]`, social.id);\r\n        });\r\n    }\r\n    //add any deleted media\r\n    if(deletedMedia.value.length){\r\n        deletedMedia.value.forEach((file, index) => {\r\n            payload.append(`deleted_media[${index}]`, file.id);\r\n        });\r\n    }\r\n\r\n    //show loading\r\n    isLoading.value = true;\r\n\r\n    //make api call\r\n    api.post(apiRoutes.EXPLORE_HUB_EDIT_LISTING, payload)\r\n            .then(response => {\r\n                //show success message\r\n                $.growl.notice({message: response.data.message});\r\n\r\n               //replace the entry for this listing in the listings list\r\n                let listingsCopy = JSON.parse(JSON.stringify(store.state.exploreHub.activeListings));\r\n                let index = listingsCopy.findIndex(entry => entry.id == listing.value.id);\r\n                if(index > -1){\r\n                    listingsCopy[index] = response.data.data;\r\n                    store.commit('exploreHub/STORE_ACTIVE_LISTINGS', listingsCopy);\r\n                }\r\n\r\n                //hide loading\r\n                isLoading.value = false;\r\n\r\n                //TODO NAVIGATE TO VIEW NEWLY ADDED LISTING\r\n                router.back();\r\n\r\n            })\r\n            .catch(error => isLoading.value = false)\r\n}\r\n</script>\r\n\r\n<template>\r\n\r\n    <div class=\"row\" v-loading=\"isLoading\">\r\n        <div class=\"col-sm-12 mb-3 d-inline-flex align-items-center justify-content-between\">\r\n            <h5 class=\"fw-bold mb-0\" style=\"margin-left: 20px;\">Edit Listing</h5>\r\n            <close-button></close-button>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Title -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <input-label>Title</input-label>\r\n                    <el-input placeholder=\"Enter listing title here\" size=\"large\" v-model=\"listing.title\"></el-input>\r\n                </div>\r\n\r\n                <!-- Description -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <input-label>Description</input-label>\r\n                    <div id=\"descriptionEditor\" class=\"quill-editor-default\">\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Placement -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Placement</input-label>\r\n                        <el-select\r\n                                placeholder=\"Select Placement\"\r\n                                size=\"large\"\r\n                                v-model=\"listing.placement\"\r\n                        >\r\n                            <el-option\r\n                                    v-for=\"placement in placements\"\r\n                                    :key=\"'create-listing-placement-'+placement\"\r\n                                    :label=\"startCase(placement)\"\r\n                                    :value=\"placement\"\r\n                            >\r\n                                <el-tag\r\n                                        v-if=\"placement == 'for_you'\"\r\n                                        type=\"success\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                                <el-tag\r\n                                        v-if=\"placement == 'featured'\"\r\n                                        type=\"primary\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                                <el-tag\r\n                                        v-if=\"placement == 'exclusive'\"\r\n                                        type=\"warning\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Company -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Company</input-label>\r\n                        <el-select\r\n                                v-model=\"listing.company_id\"\r\n                                placeholder=\"Select Company\"\r\n                                size=\"large\"\r\n                                filterable>\r\n                            <el-option\r\n                                    v-for=\"company in companies\"\r\n                                    :key=\"'create-listing-company-'+company.id\"\r\n                                    :label=\"company.name\"\r\n                                    :value=\"company.id\">\r\n                                <img :src=\"company.logo\" style=\"max-width:30px;max-height: 20px;border-radius:10px;\">\r\n                                &nbsp;{{ company.name }}\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Category -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Category</input-label>\r\n                        <el-select\r\n                                v-model=\"listing.category_id\"\r\n                                placeholder=\"Select Category\"\r\n                                size=\"large\"\r\n                                filterable>\r\n                            <el-option\r\n                                    v-for=\"category in categories\"\r\n                                    :key=\"'create-listing-category-'+category.name\"\r\n                                    :label=\"category.name\"\r\n                                    :value=\"category.id\"\r\n                            >\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <span class=\"material-symbols-outlined\">{{ category.icon }}</span> &nbsp;\r\n                                    <span>{{ category.name }}</span>\r\n                                </div>\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Start Date -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Runs from</input-label>\r\n                        <el-date-picker\r\n                                v-model=\"listing.start_at\"\r\n                                type=\"date\"\r\n                                value-format=\"YYYY-MM-DD\"\r\n                                format=\"MMM D, YYYY\"\r\n                                placeholder=\"Start Date\"\r\n                                size=\"large\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- End date -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>To</input-label>\r\n                        <el-date-picker\r\n                                v-model=\"listing.end_at\"\r\n                                type=\"date\"\r\n                                value-format=\"YYYY-MM-DD\"\r\n                                format=\"MMM D, YYYY\"\r\n                                placeholder=\"End Date\"\r\n                                size=\"large\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Media -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Media</input-label>\r\n\r\n                        <div class=\"col-md-12 p-l-10 m-t-10\" v-if=\"savedMedia.length\">\r\n                            <h6><small>Saved</small></h6>\r\n                            <div class=\"d-flex flex-wrap\">\r\n                                <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in savedMedia\" :key=\"'uploaded-media-'+index\">\r\n                                    <img :src=\"file.path\"  style=\"max-width:80px;max-height:60px;\">\r\n                                    <div class=\"remover\" @click=\"file.deleted = !file.deleted\">\r\n                                        <i class=\"ri ri-close-line\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12 p-l-10 m-t-10\" v-if=\"deletedMedia.length\">\r\n                            <h6 class=\"text-danger\"><small>Deleted</small></h6>\r\n                            <div class=\"d-flex flex-wrap\">\r\n                                <div class=\"p-1 uploaded-image deleted\"\r\n                                     v-for=\"(file, index) in deletedMedia\" :key=\"'uploaded-media-'+index\">\r\n                                    <img :src=\"file.path\"  style=\"max-width:80px;max-height:60px;\">\r\n                                    <div class=\"remover\" @click=\"file.deleted = !file.deleted\">\r\n                                        <i class=\"ri ri-close-line\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-10 m-t-10 p-l-10\">\r\n                            <h6><small>Upload new media</small></h6>\r\n                            <input type=\"file\" multiple class=\"form-control\" id=\"listingMedia\" @change=\"processUpload\">\r\n                            <div class=\"d-flex flex-wrap m-t-10\">\r\n                                <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in media\" :key=\"'uploaded-media-'+index\">\r\n                                    <img :src=\"file.url\"  style=\"max-width:80px;max-height:60px;\">\r\n                                    <div class=\"remover\" @click=\"removeUpload(index)\">\r\n                                        <i class=\"ri ri-close-line\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Payments -->\r\n                <div class=\"col-md-12 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Payments</input-label>\r\n\r\n                        <div v-if=\"savedPayments.length\" class=\"p-l-10 m-t-10\">\r\n                            <h6><small>Saved Payments</small></h6>\r\n                            <div class=\"d-flex flex-wrap align-items-center\">\r\n                                <div class=\"p-1 saved-payment\"\r\n                                     v-for=\"(payment, index) in savedPayments\" :key=\"'saved-payments-'+index\">\r\n                                    <small>\r\n                                        {{ startCase(payment.mode) }}\r\n                                         -\r\n                                        {{ moneyFormatter(payment.amount) }}\r\n                                    </small>\r\n                                    <br>\r\n                                    <el-tag size=\"small\" style=\"cursor: pointer;\" @click=\"goEditPayment(payment)\" round>Edit</el-tag>\r\n                                    &nbsp;\r\n                                    <el-tag size=\"small\" style=\"cursor:pointer;\" round type=\"danger\" @click=\"payment.deleted = !payment.deleted\">Delete</el-tag>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-l-10 m-t-10\" v-if=\"editedPayments.length\">\r\n                            <h6><small>Edited Payments</small></h6>\r\n                            <div class=\"d-inline-flex align-items-center flex-wrap\">\r\n                                <div v-for=\"(payment, index) in editedPayments\"\r\n                                     :key=\"'edited-payments-'+index\" class=\"m-r-5\">\r\n                                    <el-tag closable type=\"info\" @close=\"removeFromEdited(index, payment)\">\r\n                                        {{ startCase(payment.mode) }} - {{ moneyFormatter(payment.amount) }}\r\n                                    </el-tag>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-l-10 m-t-10\" v-if=\"deletedPayments.length\">\r\n                            <h6 class=\"text-danger\"><small>Marked for deletion</small></h6>\r\n                            <div class=\"d-inline-flex align-items-center flex-wrap\">\r\n                                <div v-for=\"(payment, index) in deletedPayments\"\r\n                                     :key=\"'to-delete-payments-'+index\" class=\"m-r-5\">\r\n                                    <el-tag closable type=\"danger\" @close=\"payment.deleted = !payment.deleted\">\r\n                                        {{ startCase(payment.mode) }} - {{ moneyFormatter(payment.amount) }}\r\n                                    </el-tag>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-l-10 m-t-10\">\r\n                            <h6 v-if=\"listingPayments.length\"><small>{{ newPayments.length ? \"New payments to save\" : \"Add payment\" }}</small></h6>\r\n                            <div class=\"col-sm-12 d-flex flex-wrap align-items-center p-l-15\">\r\n                                <div class=\"added-payment d-flex align-items-center\"\r\n                                     v-for=\"(payment, index) in newPayments\"\r\n                                     :key=\"'all-payment-modes-'+index\"\r\n                                     style=\"padding: 0 10px;\">\r\n                                    <div class=\"p-1\">\r\n                                        <small>\r\n                                            <strong>Amount</strong>: {{ moneyFormatter(payment.amount) }}\r\n                                            <br>\r\n                                            <strong>Mode</strong>: {{ startCase(payment.mode) }}\r\n                                            <template v-if=\"payment.reference\">\r\n                                                <br>\r\n                                                <strong>Reference</strong>: {{ payment.reference }}\r\n                                            </template>\r\n                                        </small>\r\n                                    </div>\r\n                                    <div class=\"remover\" @click=\"newPayments.splice(index, 1)\">\r\n                                        <i class=\"ri ri-close-line\"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                &nbsp;&nbsp;\r\n                                <el-button @click=\"isAddingPayments = !isAddingPayments\" :icon=\"Plus\" round>\r\n                                    Add payment\r\n                                </el-button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <hr class=\"m-0\">\r\n        <div class=\"modal-footer m-t-10\">\r\n            <el-button size=\"large\" type=\"primary\" @click=\"handleSaveEdits\">Save Edits</el-button>\r\n            <el-button size=\"large\" type=\"info\" @click=\"router.back()\">Cancel</el-button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Modal to add payments -->\r\n    <el-dialog\r\n            width=\"45%\"\r\n            :fullscreen=\"isSmallScreen\"\r\n            v-model=\"isAddingPayments\">\r\n\r\n        <div class=\"col-md-12 m-b-20\">\r\n            <input-label>Select Payment Mode</input-label>\r\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\r\n\r\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == newPayment.mode}\"\r\n                     v-for=\"mode in paymentModes\"\r\n                     :key=\"'all-payment-modes-'+mode.name\"\r\n                     @click=\"newPayment.mode = mode.name\">\r\n\r\n                    <div class=\"col-md-12 d-flex align-items-center\">\r\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\r\n                        &nbsp;&nbsp;\r\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\r\n                    </div>\r\n\r\n                    <div class=\"selected_indicator\" v-show=\"newPayment.mode == mode.name\">\r\n                        <i class=\"ri ri-check-line\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <input-label>Payment Amount</input-label>\r\n                <el-input placeholder=\"Enter payment amount\" v-model=\"newPayment.amount\"></el-input>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <input-label>Transaction Reference</input-label>\r\n                <el-input placeholder=\"Enter reference code\" v-model=\"newPayment.reference\"></el-input>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n            <el-button type=\"primary\" @click=\"acceptNewPayment\">Add Payment</el-button>\r\n        </div>\r\n\r\n    </el-dialog>\r\n\r\n    <!-- Modal to edit payment -->\r\n    <el-dialog\r\n            width=\"45%\"\r\n            :fullscreen=\"isSmallScreen\"\r\n            v-model=\"isEditingPayment\">\r\n\r\n        <div class=\"col-md-12 m-b-20\">\r\n            <input-label>Payment Mode</input-label>\r\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\r\n\r\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == editPayment.mode}\"\r\n                     v-for=\"mode in paymentModes\"\r\n                     :key=\"'edit-payment-modes-'+mode.name\"\r\n                     @click=\"editPayment.mode = mode.name\">\r\n\r\n                    <div class=\"col-md-12 d-flex align-items-center\">\r\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\r\n                        &nbsp;&nbsp;\r\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\r\n                    </div>\r\n\r\n                    <div class=\"selected_indicator\" v-show=\"editPayment.mode == mode.name\">\r\n                        <i class=\"ri ri-check-line\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <input-label>Payment Amount</input-label>\r\n                <el-input placeholder=\"Enter payment amount\" v-model=\"editPayment.amount\"></el-input>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <input-label>Transaction Reference</input-label>\r\n                <el-input placeholder=\"Enter reference code\" v-model=\"editPayment.reference\"></el-input>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n            <el-button type=\"primary\" :disabled=\"!hasEditedPayment\" plain @click=\"acceptPaymentEdits\">Done</el-button>\r\n        </div>\r\n\r\n    </el-dialog>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n.saved-payment{\r\n    margin: 3px;\r\n    border: 1px solid #e5e4e4;\r\n    border-radius: 5px;\r\n}\r\n</style>","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Edit.vue?vue&type=style&index=0&id=d3246a4a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d3246a4a\"]])\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","isLoading","ref","listing","placements","descriptionQuillEditor","media","mediaFiles","listingPayments","editedPayments","editPayment","isAddingPayments","isEditingPayment","paymentModes","newPayment","mode","amount","reference","newPayments","listingMedia","companies","computed","state","exploreHub","categories","listingCategories","savedPayments","value","filter","entry","deleted","edited","deletedPayments","paymentBeingEdited","find","id","hasEditedPayment","Object","keys","some","key","savedMedia","deletedMedia","fetchPaymentModes","axios","get","then","response","data","map","image","require","processUpload","event","files","target","i","length","file","reader","FileReader","onload","e","push","name","url","result","readAsDataURL","$","val","removeUpload","index","splice","acceptNewPayment","ElMessage","warning","toString","isNaN","toLowerCase","JSON","parse","stringify","goEditPayment","payment","acceptPaymentEdits","removeFromEdited","_payment","handleSaveEdits","title","placement","company_id","category_id","description","getSemanticHTML","start_at","end_at","payload","FormData","properties","forEach","append","count","startCase","social","api","post","apiRoutes","EXPLORE_HUB_EDIT_LISTING","growl","notice","message","listingsCopy","activeListings","findIndex","commit","back","catch","error","onMounted","editListing","payments","fetchExploreHubCompanies","fetchExploreHubListingCategories","html","Quill","theme","placeholder","__exports__"],"sourceRoot":""}