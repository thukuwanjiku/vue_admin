{"version":3,"file":"js/67.js","mappings":"kzBAqBA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAOTC,GAAWC,EAAAA,EAAAA,IAAS,CACtBC,IAAKA,IAAKN,EAAMO,MAAMC,cAAcC,iBACpCC,IAAMC,GAAQX,EAAMY,OAAO,wCAAyCD,KAElEE,GAAYR,EAAAA,EAAAA,IAAS,CACvBC,IAAKA,IAAKN,EAAMO,MAAMC,cAAcM,2BACpCJ,IAAMK,GAASf,EAAMY,OAAO,kDAAmDG,KAkBnF,SAASC,EAAkBC,GACvB,OAAQA,EAAQC,QACZ,IAAK,OACD,OAAOC,EAAYF,EAAQG,SAE/B,IAAK,UACD,OAAOC,EAAeJ,EAAQG,SAElC,IAAK,SACD,OAAOE,EAAcL,EAAQG,SAEzC,CAEA,SAASD,EAAYC,GAIjB,OAFApB,EAAMY,OAAO,8CAA+CW,KAAKC,MAAMD,KAAKE,UAAUL,KAE/ElB,EAAOwB,KAAK,CACfC,KAAM,wCACNC,OAAO,CACHC,iBAAkBT,EAAQU,MAAMC,WAAWC,WAAW,IAAK,OAGvE,CAEA,SAASX,EAAeD,GACpBa,EAAAA,EAAaC,QAAQ,yCAA0C,kBAAmB,CAC9EC,kBAAmB,UACnBC,iBAAkB,WAEbC,MAAK,KAEF,IAAIpB,EAAU,CACVqB,GAAIlB,EAAQkB,IAIhBC,EAAetB,EAAQ,IAE1BuB,OAAM,QACnB,CACA,SAASD,EAAetB,GAEpBJ,EAAUE,OAAQ,EAGlB0B,EAAAA,EAAIC,KAAKC,EAAAA,GAAUC,wCAAyC3B,GACnDoB,MAAKQ,KAEFC,EAAAA,EAAAA,OAEAC,EAAAA,EAAAA,IAAiCxB,KAAKC,MAAMD,KAAKE,UAAUzB,EAAMO,MAAMC,cAAcwC,yBAGrFC,EAAEC,MAAMC,OAAO,CAACC,QAASP,EAASlC,KAAKyC,SAAS,IAEnDZ,OAAMa,GAASxC,EAAUE,OAAQ,GAC9C,CAEA,SAASO,EAAcF,GACnBa,EAAAA,EAAaC,QAAQ,wCAAyC,iBAAkB,CAC5EC,kBAAmB,SACnBC,iBAAkB,WAEbC,MAAK,KAEF,IAAIpB,EAAU,CACVqB,GAAIlB,EAAQkB,IAIhBgB,EAAcrC,EAAQ,IAEzBuB,OAAM,QACnB,CACA,SAASc,EAAcrC,GAEnBJ,EAAUE,OAAQ,EAGlB0B,EAAAA,EAAIC,KAAKC,EAAAA,GAAUY,uCAAwCtC,GAClDoB,MAAKQ,KAEFC,EAAAA,EAAAA,MAGAG,EAAEC,MAAMC,OAAO,CAACC,QAASP,EAASlC,KAAKyC,SAAS,IAEnDZ,OAAMa,GAASxC,EAAUE,OAAQ,GAC9C,C,OAnGAyC,EAAAA,EAAAA,KAAU,MAEHC,EAAAA,EAAAA,IAAmB,2CAA6CrD,EAASW,MAAM2C,SAAQZ,EAAAA,EAAAA,KAAoC,I,y4DC1ClI,MAAMa,EAAc,EAEpB,O","sources":["webpack://myzola-admin/./src/views/investment_hub/listings/archived/List.vue","webpack://myzola-admin/./src/views/investment_hub/listings/archived/List.vue?b005"],"sourcesContent":["<script setup>\n\nimport {ArrowDown, Plus} from \"@element-plus/icons-vue\";\nimport {ref, computed, watch, onMounted} from \"vue\";\nimport {startCase} from \"lodash-es\";\nimport {useStore} from \"vuex\";\nimport api from \"@/services/api\";\nimport {apiRoutes} from \"@/services/apiRoutes\";\nimport {useRouter} from \"vue-router\";\nimport {ElMessage, ElMessageBox} from \"element-plus\";\nimport {\n    checkHasPermission,\n    fetchInvestmentHubActiveListings,\n    fetchInvestmentHubArchivedListings,\n    hasPermissionsWhichContain\n} from \"@/services/Helpers\";\n\n/* ----------------------------------\n* Variables & properties\n* ----------------------------------\n* */\nconst store = useStore();\nconst router = useRouter();\n\n\n/* ----------------------------------\n* Computed properties\n* ----------------------------------\n* */\nconst listings = computed({\n    get: ()=> store.state.investmentHub.archivedListings,\n    set: (data)=> store.commit(\"investmentHub/STORE_ARCHIVED_LISTINGS\", data)\n});\nconst isLoading = computed({\n    get: ()=> store.state.investmentHub.isFetchingArchivedListings,\n    set: (value)=> store.commit(\"investmentHub/SET_IS_FETCHING_ARCHIVED_LISTINGS\", value)\n});\n\n\n/* ----------------------------------\n* Lifecycle Hooks\n* ----------------------------------\n* */\nonMounted(()=> {\n    //fetch listings if they're not already\n    if(checkHasPermission('investment_hub.archived_listings.view') && !listings.value.length) fetchInvestmentHubArchivedListings();\n});\n\n\n/* ----------------------------------\n* Methods & functions\n* ----------------------------------\n* */\nfunction handleEntryAction(payload){\n    switch (payload.action){\n        case 'view':\n            return viewListing(payload.listing);\n\n        case 'restore':\n            return confirmRestore(payload.listing);\n\n        case 'delete':\n            return confirmDelete(payload.listing);\n    }\n}\n\nfunction viewListing(listing){\n    //store viewed listing in vuex store\n    store.commit(\"investmentHub/STORE_VIEWED_ARCHIVED_LISTING\", JSON.parse(JSON.stringify(listing)));\n    //go to view page\n    return router.push({\n        name: 'investment_hub.listings.archived.view',\n        params:{\n            listingTitleSlug: listing.title.toString().replaceAll(\" \", \"-\")\n        }\n    })\n}\n\nfunction confirmRestore(listing){\n    ElMessageBox.confirm('Sure you want to restore this listing?', 'Confirm Restore', {\n        confirmButtonText: 'Restore',\n        cancelButtonText: 'Cancel',\n    })\n            .then(() => {\n                //define payload to send to api\n                let payload = {\n                    id: listing.id\n                };\n\n                //send payload to method handling the\n                restoreListing(payload);\n            })\n            .catch(() => {})\n}\nfunction restoreListing(payload){\n    //show loader\n    isLoading.value = true;\n\n    //make api call\n    api.post(apiRoutes.INVESTMENT_HUB_RESTORE_ARCHIVED_LISTING, payload)\n            .then(response => {\n                //refresh archived listings\n                fetchInvestmentHubArchivedListings();\n                //refresh active listings list\n                fetchInvestmentHubActiveListings(JSON.parse(JSON.stringify(store.state.investmentHub.activeListingsFilters)));\n\n                //show success message\n                $.growl.notice({message: response.data.message});\n            })\n            .catch(error => isLoading.value = false)\n}\n\nfunction confirmDelete(listing){\n    ElMessageBox.confirm('Sure you want to delete this listing?', 'Confirm Delete', {\n        confirmButtonText: 'Delete',\n        cancelButtonText: 'Cancel',\n    })\n            .then(() => {\n                //define payload to send to api\n                let payload = {\n                    id: listing.id\n                };\n\n                //send payload to method handling the\n                deleteListing(payload);\n            })\n            .catch(() => {})\n}\nfunction deleteListing(payload){\n    //show loader\n    isLoading.value = true;\n\n    //make api call\n    api.post(apiRoutes.INVESTMENT_HUB_DELETE_ARCHIVED_LISTING, payload)\n            .then(response => {\n                //refresh listings\n                fetchInvestmentHubArchivedListings();\n\n                //show success message\n                $.growl.notice({message: response.data.message});\n            })\n            .catch(error => isLoading.value = false)\n}\n\n</script>\n\n<template>\n\n    <div class=\"row\" v-loading=\"isLoading\">\n        <!-- Datatable -->\n        <div class=\"table-responsive m-t-10\" v-if=\"checkHasPermission('investment_hub.archived_listings.view')\">\n            <table class=\"table table-hover\">\n                <thead>\n                <tr>\n                    <!--<th>Select</th>-->\n                    <th>ID</th>\n                    <th>Title</th>\n                    <th>Company</th>\n                    <th>Archived By</th>\n                    <th>On</th>\n                    <th>Reason</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-if=\"listings.length\" v-for=\"(listing, index) in listings\"\n                    :key=\"'investment_hub-archived-listings-'+index\"\n                    :class=\"{'table-info': listing.selected}\"\n                    style=\"cursor: pointer;\">\n                    <td @click=\"viewListing(listing)\">\n                        {{ listing.listing_id }}\n                    </td>\n                    <td @click=\"viewListing(listing)\">{{ listing.title }}</td>\n                    <td @click=\"viewListing(listing)\">{{ listing.company.name }}</td>\n                    <td @click=\"viewListing(listing)\">{{ listing.deleted_by }}</td>\n                    <td @click=\"viewListing(listing)\">{{ listing.deleted_at }}</td>\n                    <td @click=\"viewListing(listing)\">{{ listing.delete_reason }}</td>\n                    <td>\n                        <el-dropdown trigger=\"click\" @command=\"handleEntryAction\">\n                            <el-button plain type=\"primary\"\n                                       size=\"small\">\n                                Actions<el-icon class=\"el-icon--right\"><arrow-down /></el-icon>\n                            </el-button>\n                            <template #dropdown>\n                                <el-dropdown-menu>\n                                    <el-dropdown-item :command=\"{action:'view',listing}\">View</el-dropdown-item>\n                                    <el-dropdown-item v-if=\"checkHasPermission('investment_hub.archived_listings.restore')\" :command=\"{action:'restore',listing}\">Restore</el-dropdown-item>\n                                    <el-dropdown-item v-if=\"checkHasPermission('investment_hub.archived_listings.delete')\" :command=\"{action:'delete',listing}\">Delete</el-dropdown-item>\n                                </el-dropdown-menu>\n                            </template>\n                        </el-dropdown>\n                    </td>\n                </tr>\n                <tr v-else><td colspan=\"7\" class=\"text-center p-3\">No data</td></tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n</template>\n\n<style scoped>\n\n</style>","import script from \"./List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","listings","computed","get","state","investmentHub","archivedListings","set","data","commit","isLoading","isFetchingArchivedListings","value","handleEntryAction","payload","action","viewListing","listing","confirmRestore","confirmDelete","JSON","parse","stringify","push","name","params","listingTitleSlug","title","toString","replaceAll","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","id","restoreListing","catch","api","post","apiRoutes","INVESTMENT_HUB_RESTORE_ARCHIVED_LISTING","response","fetchInvestmentHubArchivedListings","fetchInvestmentHubActiveListings","activeListingsFilters","$","growl","notice","message","error","deleteListing","INVESTMENT_HUB_DELETE_ARCHIVED_LISTING","onMounted","checkHasPermission","length","__exports__"],"sourceRoot":""}