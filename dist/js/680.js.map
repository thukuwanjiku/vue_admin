{"version":3,"file":"js/680.js","mappings":"4TASA,MAAMA,EAAwB,8GACxBC,EAAkB,CACpB,YAAY,WAAW,WAAW,WAAW,UAAU,WAYpD,SAASC,IAEZC,EAAAA,EAAMC,OAAO,wCAAwC,GAGrDC,EAAAA,EAAIC,IAAIC,EAAAA,GAAUC,8BACTC,MAAKC,IACFP,EAAAA,EAAMC,OAAO,4CAA6CM,EAASC,KAAKA,MAGxER,EAAAA,EAAMC,OAAO,wCAAwC,EAAM,IAE9DQ,OAAMC,GAASV,EAAAA,EAAMC,OAAO,wCAAwC,IACjF,CACO,SAASU,IAEZX,EAAAA,EAAMC,OAAO,yCAAyC,GAEtDC,EAAAA,EAAIC,IAAIC,EAAAA,GAAUQ,sCACTN,MAAKC,IAEFP,EAAAA,EAAMC,OAAO,8CAA+CM,EAASC,KAAKA,MAE1ER,EAAAA,EAAMC,OAAO,yCAAyC,EAAM,IAE/DQ,OAAMC,GAASV,EAAAA,EAAMC,OAAO,yCAAyC,IAClF,CAGO,SAASY,IAEZC,EAAAA,EAAMX,IAAIN,GACDS,MAAMC,IACH,MAAMQ,EAAoBR,EAASC,KAC7BQ,EAAQD,EAAkBE,MAAM,MAChCC,EAAQF,EAAMG,KAAKC,IACrB,MAAMC,EAAQD,EAAKH,MAAM,KACzB,OAAOI,EAAM,EAAE,IAInBrB,EAAAA,EAAMC,OAAO,oCAAqCiB,EAAM,GAExE,CACO,SAASI,EAAcC,EAAS,IACnC,IAAIC,EAAO,GACPC,EAAW,kEACf,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAChE,OAAOC,CACX,CACO,SAASO,EAAeC,EAAQC,EAAS,GAAKC,EAAkB,MAEnE,IAAIC,EAAKC,SAASF,IAAoB,EAElCG,GAAmB,IAAIC,KAAKC,cAAgBC,OAAOC,WAAWT,GAAQU,QAAQP,IAOlF,OAAQF,EAAWA,EAAW,IAAM,IAAMI,CAC9C,C,4kEChEA,MAAMrC,GAAQ2C,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,IAAUD,EAAAA,EAAAA,IAAI,CAChBE,MAAO,KACPC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,SAAU,KACVC,OAAQ,KACRC,YAAa,OAGXC,IAAaT,EAAAA,EAAAA,IAAI,CAAC,UAAW,WAAY,cAC/C,IAAIU,IAAyBV,EAAAA,EAAAA,IAAI,MACjC,MAAMW,IAAQX,EAAAA,EAAAA,IAAI,IACZY,IAAaZ,EAAAA,EAAAA,IAAI,IAEjBa,IAAmBb,EAAAA,EAAAA,KAAI,GACvBc,IAAed,EAAAA,EAAAA,IAAI,IACnBe,IAAaf,EAAAA,EAAAA,IAAI,CACnBgB,KAAK,KACL/B,OAAO,KACPgC,UAAU,OAERC,IAAWlB,EAAAA,EAAAA,IAAI,IAQrB,IAAImB,IAAYC,EAAAA,EAAAA,KAAS,IAAKnE,EAAMoE,MAAMC,WAAWH,YACjDI,IAAaH,EAAAA,EAAAA,KAAS,IAAKnE,EAAMoE,MAAMC,WAAWE,oBAuBtD,SAASC,KACL1D,EAAAA,EAAMX,IAAI,6BACDG,MAAKC,GACEsD,GAAaY,MAAQlE,EAASC,KACrBW,KAAIuD,IACDA,EAAMC,MAAQC,EAAAA,KAAAA,CAAQ,KAA4BF,EAAMC,SACjDD,MAEvC,CACA,SAASG,GAAcC,GACnB,MAAMC,EAAQD,EAAME,OAAOD,MAC3B,IAAK,IAAIrD,EAAI,EAAGA,EAAIqD,EAAMxD,OAAQG,IAAK,CACnC,MAAMuD,EAAOF,EAAMrD,GACbwD,EAAS,IAAIC,WAEnBD,EAAOE,OAAUC,IACb3B,GAAMe,MAAMa,KAAK,CACbC,KAAMN,EAAKM,KACXC,IAAKH,EAAEL,OAAOS,SAElB9B,GAAWc,MAAMa,KAAKL,EAAK,EAG/BC,EAAOQ,cAAcT,EACzB,CAIAU,EAAE,iBAAiBC,IAAI,GAC3B,CACA,SAASC,GAAaC,GAClBpC,GAAMe,MAAMsB,OAAOD,EAAO,GAC1BnC,GAAWc,MAAMsB,OAAOD,EAAO,EACnC,CACA,SAASE,KAEL,OAAIlC,GAAWW,MAAMV,MAASD,GAAWW,MAAMV,KAAKxC,OAEhDuC,GAAWW,MAAMzC,QAAW8B,GAAWW,MAAMzC,OAAOiE,WAAW1E,OAGhE2E,MAAMpC,GAAWW,MAAMzC,QACfmE,EAAAA,GAAUC,QAAQ,+BAEI,MAA9BtC,GAAWW,MAAMT,WAAqBF,GAAWW,MAAMT,UAAUzC,QAC7D0C,GAASQ,MAAM4B,MAAK3B,GACfA,EAAMV,UAAUiC,WAAWK,eACxBxC,GAAWW,MAAMT,UAAUiC,WAAWK,gBACtCH,EAAAA,GAAUC,QAAQ,yCAIjCnC,GAASQ,MAAMa,KAAKiB,KAAKC,MAAMD,KAAKE,UAAU3C,GAAWW,SAGzDX,GAAWW,MAAQ,CAACV,KAAK,KAAK/B,OAAO,KAAKgC,UAAU,WAGpDJ,GAAiBa,OAAQ,IAnBd0B,EAAAA,GAAUC,QAAQ,mCAFlBD,EAAAA,GAAUC,QAAQ,+BAsBjC,CAEA,SAASM,KAEL,IAAI1D,GAAQyB,MAAMxB,QAAUD,GAAQyB,MAAMxB,MAAM1B,OAC5C,OAAO4E,EAAAA,GAAUC,QAAQ,sBAG7B,IAAIpD,GAAQyB,MAAMvB,YAAcF,GAAQyB,MAAMvB,UAAU3B,OACpD,OAAO4E,EAAAA,GAAUC,QAAQ,mCAG7B,IAAIpD,GAAQyB,MAAMrB,aAAeJ,GAAQyB,MAAMrB,WAAW6C,WAAW1E,OACjE,OAAO4E,EAAAA,GAAUC,QAAQ,6BAG7B,IAAIpD,GAAQyB,MAAMtB,cAAgBH,GAAQyB,MAAMtB,YAAY8C,WAAW1E,OACnE,OAAO4E,EAAAA,GAAUC,QAAQ,8BAG7B,IAAIzC,GAAWc,MAAMlD,OACjB,OAAO4E,EAAAA,GAAUC,QAAQ,8CAG7B,IAAI7C,EAAcE,GAAuBkD,kBACzC,IAAIpD,IACQA,EAAY0C,WAAW1E,QACT,WAAfgC,EACP,OAAO4C,EAAAA,GAAUC,QAAQ,wCAG7B,IAAIpD,GAAQyB,MAAMpB,WAAaL,GAAQyB,MAAMpB,SAAS9B,OAClD,OAAO4E,EAAAA,GAAUC,QAAQ,4BAG7B,IAAIpD,GAAQyB,MAAMnB,SAAWN,GAAQyB,MAAMnB,OAAO/B,OAC9C,OAAO4E,EAAAA,GAAUC,QAAQ,0BAI7BpD,GAAQyB,MAAMlB,YAAcA,EAG5B,IAAIqD,EAAU,IAAIC,SAElBC,OAAOC,KAAK/D,GAAQyB,OACXuC,SAAQC,IACL,IAAIxC,EAAQzB,GAAQyB,MAAMwC,GAC1BL,EAAQM,OAAOD,EAAKxC,EAAM,IAGtC,IAAI,IAAI0C,EAAM,EAAGA,EAAQxD,GAAWc,MAAMlD,OAAQ4F,IAC9CP,EAAQM,OAAO,SAASC,KAAUxD,GAAWc,MAAM0C,IAGvD,GAAGlD,GAASQ,MAAMlD,OACd,IAAK,IAAI4F,EAAQ,EAAGA,EAAQlD,GAASQ,MAAMlD,OAAQ4F,IAC/CP,EAAQM,OAAO,YAAYC,aAAkBlD,GAASQ,MAAM0C,GAAOnF,QACnE4E,EAAQM,OAAO,YAAYC,WAAgBlD,GAASQ,MAAM0C,GAAOpD,MACjE6C,EAAQM,OAAO,YAAYC,gBAAqBlD,GAASQ,MAAM0C,GAAOnD,YAAaoD,EAAAA,EAAAA,GAAUnD,GAASQ,MAAM0C,GAAOpD,OAK3HjB,EAAU2B,OAAQ,EAGlBvE,EAAAA,EAAImH,KAAKjH,EAAAA,GAAUkH,wBAAyBV,GACnCtG,MAAKC,IAEFoF,EAAE4B,MAAMC,OAAO,CAACC,QAASlH,EAASC,KAAKiH,UAGvCzH,EAAMC,OAAO,mCAAoC,IACjDD,EAAMC,OAAO,2CAA4C,CAAC,GAG1D6C,EAAU2B,OAAQ,EAIlB7B,EAAO8E,MAAM,IAGhBjH,OAAMC,GAASoC,EAAU2B,OAAQ,GAC9C,C,OAjKAkD,EAAAA,EAAAA,KAAU,KAEFzD,GAAUO,MAAMlD,SAAQxB,EAAAA,EAAAA,MACxBuE,GAAWG,MAAMlD,SAAQZ,EAAAA,EAAAA,MAC7B6D,KAEAf,GAAyB,IAAImE,MAAM,qBAAsB,CACrDC,MAAO,OACPC,YAAa,2BACf,I,+nNClEN,MAAMC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S,uBCRA,IAAI5G,EAAM,CACT,uBAAwB,KACxB,aAAc,KACd,aAAc,KACd,eAAgB,KAChB,cAAe,MAIhB,SAAS6G,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAElH,EAAK8G,GAAM,CACpC,IAAI5C,EAAI,IAAIiD,MAAM,uBAAyBL,EAAM,KAEjD,MADA5C,EAAEkD,KAAO,mBACHlD,CACP,CACA,OAAOlE,EAAI8G,EACZ,CACAD,EAAejB,KAAO,WACrB,OAAOD,OAAOC,KAAK5F,EACpB,EACA6G,EAAeQ,QAAUL,EACzBM,EAAOC,QAAUV,EACjBA,EAAeE,GAAK,I","sources":["webpack://myzola-admin/./src/services/Helpers.js","webpack://myzola-admin/./src/views/explore/listings/active/Add.vue","webpack://myzola-admin/./src/views/explore/listings/active/Add.vue?c1bd","webpack://myzola-admin/./src/assets/images/payments/ sync ^\\.\\/.*$"],"sourcesContent":["import axios from \"axios\";\r\nimport store from \"@/store\";\r\nimport api from \"@/services/api\";\r\nimport {apiRoutes} from \"@/services/apiRoutes\";\r\n\r\n/* --------------------------\r\n* Variables\r\n* --------------------------\r\n* */\r\nconst materialIconsNamesUrl = \"https://raw.githubusercontent.com/google/material-design-icons/master/font/MaterialIcons-Regular.codepoints\";\r\nconst socialPlatforms = [\r\n    \"instagram\",\"facebook\",\"whatsapp\",\"linkedin\",\"youtube\",\"twitter\",\r\n];\r\n\r\nexport {\r\n    socialPlatforms\r\n};\r\n\r\n\r\n/* --------------------------\r\n* Functions\r\n* --------------------------\r\n* */\r\nexport function fetchExploreHubCompanies(){\r\n    //show loader\r\n    store.commit(\"exploreHub/SET_IS_FETCHING_COMPANIES\", true);\r\n\r\n    //make api call\r\n    api.get(apiRoutes.GET_EXPLORE_LISTED_COMPANIES)\r\n            .then(response => {\r\n                store.commit(\"exploreHub/STORE_EXPLORE_LISTED_COMPANIES\", response.data.data);\r\n\r\n                //dismiss loader\r\n                store.commit(\"exploreHub/SET_IS_FETCHING_COMPANIES\", false);\r\n            })\r\n            .catch(error => store.commit(\"exploreHub/SET_IS_FETCHING_COMPANIES\", false));\r\n}\r\nexport function fetchExploreHubListingCategories(){\r\n    //show loading overlay\r\n    store.commit('exploreHub/SET_IS_FETCHING_CATEGORIES', true);\r\n\r\n    api.get(apiRoutes.EXPLORE_HUB_FETCH_LISTING_CATEGORIES)\r\n            .then(response => {\r\n                //store data in vuex store\r\n                store.commit('exploreHub/STORE_EXPLORE_LISTING_CATEGORIES', response.data.data);\r\n                //dismiss loading\r\n                store.commit('exploreHub/SET_IS_FETCHING_CATEGORIES', false);\r\n            })\r\n            .catch(error => store.commit('exploreHub/SET_IS_FETCHING_CATEGORIES', false));\r\n}\r\n\r\n\r\nexport function fetchMaterialIconsNames(){\r\n    //fetch material icons data\r\n    axios.get(materialIconsNamesUrl)\r\n            .then((response) => {\r\n                const materialIconsData = response.data;\r\n                const lines = materialIconsData.split('\\n');\r\n                const names = lines.map((line) => {\r\n                    const parts = line.split(' ');\r\n                    return parts[0];\r\n                });\r\n\r\n                //store names in vuex store\r\n                store.commit('shared/STORE_MATERIAL_ICONS_NAMES', names);\r\n            });\r\n}\r\nexport function randomString (length = 12) {\r\n    let text = \"\";\r\n    let possible = \"A0zBCDy1EFx2GHx3wIJvKL4uMNtOs5PrQR6qSTpU7oVWnXm8YZab9cdefghijkl\";\r\n    for (let i = 0; i < length; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    return text;\r\n}\r\nexport function moneyFormatter(amount, currency='' , floating_points = null) {\r\n    //define decimal places to round off the value to\r\n    let dp = parseInt(floating_points) || 0;\r\n    //format the value passed\r\n    let formattedAmount = (new Intl.NumberFormat()).format(parseFloat(amount).toFixed(dp));\r\n    //for whole numbers without a decimal, the Intl.NumberFormat method fails to apply decimal places, apply them manuall\r\n    /*if (dp > 0 && !formattedAmount.includes('.')) {\r\n        let extraZeroes = \"00000000\";\r\n        formattedAmount = formattedAmount + \".\" + extraZeroes.substr(0, dp);\r\n    }*/\r\n    //return formatted value plus the business currency\r\n    return (currency ? currency + \" \" : '') + formattedAmount;\r\n}","<script setup>\r\n\r\nimport CloseButton from \"@/components/CloseButton.vue\";\r\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n    fetchExploreHubCompanies,\r\n    fetchExploreHubListingCategories, moneyFormatter\r\n} from \"@/services/Helpers\";\r\nimport InputLabel from \"@/components/InputLabel.vue\";\r\nimport {startCase} from \"lodash-es\";\r\nimport {Plus} from \"@element-plus/icons-vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport api from \"@/services/api\";\r\nimport {apiRoutes} from \"@/services/apiRoutes\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n/* -----------------------------\r\n * Properties & Variables\r\n * -----------------------------\r\n * */\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst isLoading = ref(false);\r\nconst listing = ref({\r\n    title: null,\r\n    placement: null,\r\n    category_id: null,\r\n    company_id: null,\r\n    start_at: null,\r\n    end_at: null,\r\n    description: null,\r\n});\r\n\r\nconst placements = ref(['for_you', 'featured', 'exclusive']);\r\nlet descriptionQuillEditor = ref(null);\r\nconst media = ref([]);\r\nconst mediaFiles = ref([]);\r\n\r\nconst isAddingPayments = ref(false);\r\nconst paymentModes = ref([]);\r\nconst newPayment = ref({\r\n    mode:null,\r\n    amount:null,\r\n    reference:null\r\n});\r\nconst payments = ref([]);\r\n\r\n\r\n\r\n/* -----------------------------\r\n * Computed Properties\r\n * -----------------------------\r\n * */\r\nlet companies = computed(()=> store.state.exploreHub.companies);\r\nlet categories = computed(()=> store.state.exploreHub.listingCategories);\r\n\r\n/* -----------------------------\r\n * Hooks\r\n * -----------------------------\r\n * */\r\nonMounted(()=> {\r\n    //fetch required resource which aren't loaded yet\r\n    if(!companies.value.length) fetchExploreHubCompanies();\r\n    if(!categories.value.length) fetchExploreHubListingCategories();\r\n    fetchPaymentModes();\r\n\r\n    descriptionQuillEditor = new Quill('#descriptionEditor', {\r\n        theme: 'snow',\r\n        placeholder: 'Enter listing body here'\r\n    });\r\n});\r\n\r\n\r\n/* -----------------------------\r\n * Methods & Functions\r\n * -----------------------------\r\n * */\r\nfunction fetchPaymentModes(){\r\n    axios.get('/assets/PaymentModes.json')\r\n            .then(response =>\r\n                    paymentModes.value = response.data\r\n                            .map(entry => {\r\n                                entry.image = require(`@/assets/images/payments/${entry.image}`);\r\n                                return entry;\r\n                            }));\r\n}\r\nfunction processUpload(event){\r\n    const files = event.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            media.value.push({\r\n                name: file.name,\r\n                url: e.target.result,\r\n            });\r\n            mediaFiles.value.push(file);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n    //reset selection\r\n    $(\"#listingMedia\").val(\"\");\r\n}\r\nfunction removeUpload(index){\r\n    media.value.splice(index, 1);\r\n    mediaFiles.value.splice(index, 1);\r\n}\r\nfunction acceptNewPayment(){\r\n    //validate that all required fields have been entered: mode & amount\r\n    if(!newPayment.value.mode || !newPayment.value.mode.length)\r\n        return ElMessage.warning(\"Please select a payment mode\");\r\n    if(!newPayment.value.amount || !newPayment.value.amount.toString().length)\r\n        return ElMessage.warning(\"Please enter the payment amount\");\r\n    //validate that a valid payment amount has been entered\r\n    if(isNaN(newPayment.value.amount))\r\n        return ElMessage.warning(\"Please enter a valid amount\");\r\n    //check that reference code is not repeated\r\n    if(newPayment.value.reference != null && newPayment.value.reference.length){\r\n        if(payments.value.find(entry =>\r\n                entry.reference.toString().toLowerCase()\r\n                == newPayment.value.reference.toString().toLowerCase()))\r\n            return ElMessage.warning(\"Reference code has already been used\");\r\n    }\r\n\r\n    //everything's ok, add the new payment to list of payments\r\n    payments.value.push(JSON.parse(JSON.stringify(newPayment.value)));\r\n\r\n    //clear the fields\r\n    newPayment.value = {mode:null,amount:null,reference:null};\r\n\r\n    //dismiss the add payment dialog\r\n    isAddingPayments.value = false;\r\n}\r\n\r\nfunction handleCreateListing(){\r\n    //validate title\r\n    if(!listing.value.title || !listing.value.title.length){\r\n        return ElMessage.warning(\"Please enter title\");\r\n    }\r\n    //validate placement\r\n    if(!listing.value.placement || !listing.value.placement.length){\r\n        return ElMessage.warning(\"Please select listing placement\");\r\n    }\r\n    //validate company selection\r\n    if(!listing.value.company_id || !listing.value.company_id.toString().length){\r\n        return ElMessage.warning(\"Please select the company\");\r\n    }\r\n    //validate category selection\r\n    if(!listing.value.category_id || !listing.value.category_id.toString().length){\r\n        return ElMessage.warning(\"Please select the category\");\r\n    }\r\n    //validate media\r\n    if(!mediaFiles.value.length){\r\n        return ElMessage.warning(\"Please upload some images for this listing\");\r\n    }\r\n    //validate description\r\n    let description = descriptionQuillEditor.getSemanticHTML();\r\n    if(!description\r\n            || !description.toString().length\r\n            || description == \"<p></p>\") {\r\n        return ElMessage.warning(\"Please enter the listing description\")\r\n    }\r\n    //validate start date\r\n    if(!listing.value.start_at || !listing.value.start_at.length){\r\n        return ElMessage.warning(\"Please select start date\");\r\n    }\r\n    //validate end date\r\n    if(!listing.value.end_at || !listing.value.end_at.length){\r\n        return ElMessage.warning(\"Please select end date\");\r\n    }\r\n\r\n    //set description from rich text editor\r\n    listing.value.description = description;\r\n\r\n    //prepare request payload\r\n    let payload = new FormData();\r\n    //add all listing details to the form data\r\n    Object.keys(listing.value)\r\n            .forEach(key => {\r\n                let value = listing.value[key];\r\n                payload.append(key, value)\r\n            });\r\n    //append media to payload\r\n    for(let count=0; count < mediaFiles.value.length; count++){\r\n        payload.append(`media[${count}]`, mediaFiles.value[count]);\r\n    }\r\n    //append payments to payload\r\n    if(payments.value.length){\r\n        for (let count = 0; count < payments.value.length; count++) {\r\n            payload.append(`payments[${count}][amount]`, payments.value[count].amount);\r\n            payload.append(`payments[${count}][mode]`, payments.value[count].mode);\r\n            payload.append(`payments[${count}][reference]`, payments.value[count].reference || startCase(payments.value[count].mode));\r\n        }\r\n    }\r\n\r\n    //show loading\r\n    isLoading.value = true;\r\n\r\n    //make api call\r\n    api.post(apiRoutes.EXPLORE_HUB_ADD_LISTING, payload)\r\n            .then(response => {\r\n                //show success message\r\n                $.growl.notice({message: response.data.message});\r\n\r\n                //reset listings array & filters in vuex so that listings can be refreshed when we go back to list\r\n                store.commit('exploreHub/STORE_ACTIVE_LISTINGS', []);\r\n                store.commit('exploreHub/STORE_ACTIVE_LISTINGS_FILTERS', {});\r\n\r\n                //hide loading\r\n                isLoading.value = false;\r\n\r\n                //TODO NAVIGATE TO VIEW NEWLY ADDED LISTING\r\n                //navigate back\r\n                router.back();\r\n\r\n            })\r\n            .catch(error => isLoading.value = false)\r\n}\r\n</script>\r\n\r\n<template>\r\n\r\n    <div class=\"row\" v-loading=\"isLoading\">\r\n        <div class=\"col-sm-12 mb-3 d-inline-flex align-items-center justify-content-between\">\r\n            <h5 class=\"fw-bold mb-0\" style=\"margin-left: 20px;\">Create a new Listing</h5>\r\n            <close-button></close-button>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Title -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <input-label>Title</input-label>\r\n                    <el-input placeholder=\"Enter listing title here\" size=\"large\" v-model=\"listing.title\"></el-input>\r\n                </div>\r\n\r\n                <!-- Placement -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Placement</input-label>\r\n                        <el-select\r\n                                placeholder=\"Select Placement\"\r\n                                size=\"large\"\r\n                                v-model=\"listing.placement\"\r\n                        >\r\n                            <el-option\r\n                                    v-for=\"placement in placements\"\r\n                                    :key=\"'create-listing-placement-'+placement\"\r\n                                    :label=\"startCase(placement)\"\r\n                                    :value=\"placement\"\r\n                            >\r\n                                <el-tag\r\n                                        v-if=\"placement == 'for_you'\"\r\n                                        type=\"success\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                                <el-tag\r\n                                        v-if=\"placement == 'featured'\"\r\n                                        type=\"primary\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                                <el-tag\r\n                                        v-if=\"placement == 'exclusive'\"\r\n                                        type=\"warning\"\r\n                                        effect=\"light\"\r\n                                        round\r\n                                        size=\"small\"\r\n                                >\r\n                                    {{ startCase(placement) }}\r\n                                </el-tag>\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Company -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Company</input-label>\r\n                        <el-select\r\n                                v-model=\"listing.company_id\"\r\n                                placeholder=\"Select Company\"\r\n                                size=\"large\"\r\n                                filterable>\r\n                            <el-option\r\n                                    v-for=\"company in companies\"\r\n                                    :key=\"'create-listing-company-'+company.id\"\r\n                                    :label=\"company.name\"\r\n                                    :value=\"company.id\">\r\n                                <img :src=\"company.logo\" style=\"max-width:30px;max-height: 20px;border-radius:10px;\">\r\n                                &nbsp;{{ company.name }}\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Category -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Category</input-label>\r\n                        <el-select\r\n                                v-model=\"listing.category_id\"\r\n                                placeholder=\"Select Category\"\r\n                                size=\"large\"\r\n                                filterable>\r\n                            <el-option\r\n                                    v-for=\"category in categories\"\r\n                                    :key=\"'create-listing-category-'+category.name\"\r\n                                    :label=\"category.name\"\r\n                                    :value=\"category.id\"\r\n                            >\r\n                                <span class=\"material-symbols-outlined\">{{ category.icon }}</span> &nbsp;\r\n                                {{ category.name }}\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Media -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Media</input-label>\r\n                        <input type=\"file\" multiple class=\"form-control\" id=\"listingMedia\" @change=\"processUpload\">\r\n                        <br>\r\n                        <div class=\"d-flex flex-wrap\">\r\n                            <div class=\"p-1 uploaded-image\" v-for=\"(file, index) in media\" :key=\"'uploaded-media-'+index\">\r\n                                <img :src=\"file.url\"  style=\"max-width:80px;max-height:60px;\">\r\n                                <div class=\"remover\" @click=\"removeUpload(index)\">\r\n                                    <i class=\"ri ri-close-line\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Description -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <input-label>Description</input-label>\r\n                    <div id=\"descriptionEditor\" class=\"quill-editor-default\">\r\n                    </div>\r\n                </div>\r\n                <!-- Start Date -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Runs from</input-label>\r\n                        <el-date-picker\r\n                                v-model=\"listing.start_at\"\r\n                                type=\"date\"\r\n                                value-format=\"YYYY-MM-DD\"\r\n                                format=\"MMM D, YYYY\"\r\n                                placeholder=\"Start Date\"\r\n                                size=\"large\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <!-- End date -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>To</input-label>\r\n                        <el-date-picker\r\n                                v-model=\"listing.end_at\"\r\n                                type=\"date\"\r\n                                value-format=\"YYYY-MM-DD\"\r\n                                format=\"MMM D, YYYY\"\r\n                                placeholder=\"End Date\"\r\n                                size=\"large\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <!-- Payments -->\r\n                <div class=\"col-md-10 m-b-20\">\r\n                    <div class=\"form-floating\">\r\n                        <input-label>Payments</input-label>\r\n\r\n                        <div class=\"col-sm-12 d-flex flex-wrap align-items-center\">\r\n                            <div class=\"payment d-flex align-items-center\"\r\n                                 v-for=\"(payment, index) in payments\"\r\n                                 :key=\"'all-payment-modes-'+index\"\r\n                                 style=\"padding: 0 10px;\">\r\n                                <small>{{ startCase(payment.mode) }}</small>\r\n                                &nbsp;\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <i class=\"bi bi-circle big-dot m-l-3 m-r-3\" style=\"background:grey;font-size:4px;\"></i>\r\n                                </div>\r\n                                &nbsp;\r\n                                <small>KES {{ moneyFormatter(payment.amount) }}</small>\r\n\r\n                                <div class=\"m-l-20 d-flex align-items-center hov-pointer\" @click=\"payments.splice(index, 1)\">\r\n                                    <i class=\"ri ri-close-line fs-18\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                            &nbsp;&nbsp;\r\n                            <el-button @click=\"isAddingPayments = !isAddingPayments\" :icon=\"Plus\" round>\r\n                                Add payment\r\n                            </el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <hr class=\"m-0\">\r\n        <div class=\"modal-footer m-t-10\">\r\n            <el-button size=\"large\" type=\"primary\" @click=\"handleCreateListing\">Create Listing</el-button>\r\n            <el-button size=\"large\" type=\"info\" @click=\"router.back()\">Cancel</el-button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Modal to add payments -->\r\n    <el-dialog\r\n            width=\"45%\"\r\n            v-model=\"isAddingPayments\">\r\n\r\n        <div class=\"col-md-12 m-b-20\">\r\n            <input-label>Select Payment Mode</input-label>\r\n            <div class=\"col-md-12 m-t-10 d-flex flex-wrap\">\r\n\r\n                <div class=\"p-1 payment-mode hov-pointer\" :class=\"{'selected': mode.name == newPayment.mode}\"\r\n                     v-for=\"mode in paymentModes\"\r\n                     :key=\"'all-payment-modes-'+mode.name\"\r\n                     @click=\"newPayment.mode = mode.name\">\r\n\r\n                    <div class=\"col-md-12 d-flex align-items-center\">\r\n                        <img :src=\"mode.image\"  style=\"max-width:40px;max-height:20px;\">\r\n                        &nbsp;&nbsp;\r\n                        <h6 class=\"m-0\">{{ startCase(mode.name) }}</h6>\r\n                    </div>\r\n\r\n                    <div class=\"selected_indicator\" v-show=\"newPayment.mode == mode.name\">\r\n                        <i class=\"ri ri-check-line\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <input-label>Payment Amount</input-label>\r\n                <el-input placeholder=\"Enter payment amount\" v-model=\"newPayment.amount\"></el-input>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <input-label>Transaction Reference</input-label>\r\n                <el-input placeholder=\"Enter reference code\" v-model=\"newPayment.reference\"></el-input>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n            <el-button type=\"primary\" @click=\"acceptNewPayment\">Add Payment</el-button>\r\n        </div>\r\n\r\n    </el-dialog>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n.payment-mode{\r\n    position: relative;\r\n    margin: 3px;\r\n    border: 1px solid #e5e4e4;\r\n    border-radius: 5px;\r\n}\r\n.payment-mode.selected{\r\n    border-color: #409EFF;\r\n    border-width: 2px;\r\n}\r\n.payment-mode > .selected_indicator {\r\n    position: absolute;\r\n    right: -5px;\r\n    top: -6px;\r\n    background: #409EFF;\r\n    border-radius: 50%;\r\n    height: 12px;\r\n    width: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff;\r\n    cursor: pointer;\r\n}\r\n.payment{\r\n    position: relative;\r\n    margin: 3px;\r\n    border-radius: 20px;\r\n    border: 2px solid #dbdbdb;\r\n}\r\n</style>","import script from \"./Add.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Add.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Add.vue?vue&type=style&index=0&id=38862eb1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-38862eb1\"]])\n\nexport default __exports__","var map = {\n\t\"./bank_transfer.webp\": 1880,\n\t\"./card.png\": 2785,\n\t\"./cash.png\": 6450,\n\t\"./cheque.png\": 4354,\n\t\"./mpesa.png\": 9459\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1707;"],"names":["materialIconsNamesUrl","socialPlatforms","fetchExploreHubCompanies","store","commit","api","get","apiRoutes","GET_EXPLORE_LISTED_COMPANIES","then","response","data","catch","error","fetchExploreHubListingCategories","EXPLORE_HUB_FETCH_LISTING_CATEGORIES","fetchMaterialIconsNames","axios","materialIconsData","lines","split","names","map","line","parts","randomString","length","text","possible","i","charAt","Math","floor","random","moneyFormatter","amount","currency","floating_points","dp","parseInt","formattedAmount","Intl","NumberFormat","format","parseFloat","toFixed","useStore","router","useRouter","isLoading","ref","listing","title","placement","category_id","company_id","start_at","end_at","description","placements","descriptionQuillEditor","media","mediaFiles","isAddingPayments","paymentModes","newPayment","mode","reference","payments","companies","computed","state","exploreHub","categories","listingCategories","fetchPaymentModes","value","entry","image","require","processUpload","event","files","target","file","reader","FileReader","onload","e","push","name","url","result","readAsDataURL","$","val","removeUpload","index","splice","acceptNewPayment","toString","isNaN","ElMessage","warning","find","toLowerCase","JSON","parse","stringify","handleCreateListing","getSemanticHTML","payload","FormData","Object","keys","forEach","key","append","count","startCase","post","EXPLORE_HUB_ADD_LISTING","growl","notice","message","back","onMounted","Quill","theme","placeholder","__exports__","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports"],"sourceRoot":""}